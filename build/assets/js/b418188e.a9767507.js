"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5719],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>g});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=s(n),u=a,g=p["".concat(c,".").concat(u)]||p[u]||m[u]||o;return n?r.createElement(g,i(i({ref:t},d),{},{components:n})):r.createElement(g,i({ref:t},d))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=u;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[p]="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},3995:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var r=n(7462),a=(n(7294),n(3905));const o={id:"Credential Management",title:"Credential Management",hide_title:!1,hide_table_of_contents:!1,sidebar_label:"Credential Management",sidebar_position:2,toc_max_heading_level:4,pagination_label:"Credential Management",tags:["Refernce Doc","CMDLet"],description:"Managing Credentials in PowerShell."},i=void 0,l={unversionedId:"PowerShell/Credential Management",id:"PowerShell/Credential Management",title:"Credential Management",description:"Managing Credentials in PowerShell.",source:"@site/docs/PowerShell/Credential & User Interaction.md",sourceDirName:"PowerShell",slug:"/PowerShell/Credential Management",permalink:"/PowerShell/Credential Management",draft:!1,tags:[{label:"Refernce Doc",permalink:"/tags/refernce-doc"},{label:"CMDLet",permalink:"/tags/cmd-let"}],version:"current",sidebarPosition:2,frontMatter:{id:"Credential Management",title:"Credential Management",hide_title:!1,hide_table_of_contents:!1,sidebar_label:"Credential Management",sidebar_position:2,toc_max_heading_level:4,pagination_label:"Credential Management",tags:["Refernce Doc","CMDLet"],description:"Managing Credentials in PowerShell."},sidebar:"tutorialSidebar",previous:{title:"Windows OS Scripts",permalink:"/PowerShell/Scripts/Windows OS Scripts"},next:{title:"Error Management",permalink:"/PowerShell/Error Management"}},c={},s=[{value:"Document Control",id:"document-control",level:2},{value:"Collect and encrypt credentials to file using default method",id:"collect-and-encrypt-credentials-to-file-using-default-method",level:2},{value:"User confirmation statement",id:"user-confirmation-statement",level:2}],d={toc:s};function p(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"document-control"},"Document Control"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Created: 2023/03/31"),(0,a.kt)("li",{parentName:"ul"},"Last Updated: 2023/03/31")),(0,a.kt)("h2",{id:"collect-and-encrypt-credentials-to-file-using-default-method"},"Collect and encrypt credentials to file using default method"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-powershell",metastring:"showLineNumbers",showLineNumbers:!0},'$credential = Get-Credential\n$credential.Password | ConvertFrom-SecureString | Set-Content "C:\\temp\\Reporting\\encrypted_password_for_reporting.txt"\n\n<# Decrypting it and using it in a script#>\n\n# Get the credential\n$emailusername = "email.address@domain.com"\n$encrypted = Get-Content "C:\\temp\\encrypted_password_for_reporting.txt" | ConvertTo-SecureString\n$credential = New-Object System.Management.Automation.PsCredential($emailusername, $encrypted)\n')),(0,a.kt)("h2",{id:"user-confirmation-statement"},"User confirmation statement"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-powershell",metastring:"showLineNumbers",showLineNumbers:!0},'<# Disclaimer to confirm user is happy to begin the process. #>\n\nWrite-Host "Write your warning text here." -ForegroundColor Yellow\nStart-Sleep 2\n$decisionConfirmation = Read-Host "Are you sure you wish to proceed. Type Y to begin or N to stop here [y/n]."\n\nif ($decisionConfirmation -ne \'y\') {\n    <# Action if  statement is true. #>\n    Write-Host "The script will not proceed any further." -ForegroundColor Red\n    WriteToLogFile "$(Get-Date) - User selected to not proceed with the script, terminating."\n    throw  \'Script terminated.\' \n}\n')))}p.isMDXComponent=!0}}]);