"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3248],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>S});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var c=n.createContext({}),l=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),d=l(r),m=i,S=d["".concat(c,".").concat(m)]||d[m]||u[m]||o;return r?n.createElement(S,s(s({ref:t},p),{},{components:r})):n.createElement(S,s({ref:t},p))}));function S(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,s=new Array(o);s[0]=m;var a={};for(var c in t)hasOwnProperty.call(t,c)&&(a[c]=t[c]);a.originalType=e,a[d]="string"==typeof e?e:i,s[1]=a;for(var l=2;l<o;l++)s[l]=r[l];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},5986:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>a,toc:()=>l});var n=r(7462),i=(r(7294),r(3905));const o={id:"Windows OS Scripts",title:"Windows OS Scripts",hide_title:!1,hide_table_of_contents:!1,sidebar_label:"Windows OS Scripts",sidebar_position:3,toc_max_heading_level:4,pagination_label:"Windows OS Scripts",tags:["Scripts","Re-usable Code"],description:"Windows OS Scripts and re-usable code."},s=void 0,a={unversionedId:"Scripts/Windows OS Scripts",id:"Scripts/Windows OS Scripts",title:"Windows OS Scripts",description:"Windows OS Scripts and re-usable code.",source:"@site/docs/Scripts/Windows OS Scripts.md",sourceDirName:"Scripts",slug:"/Scripts/Windows OS Scripts",permalink:"/docs/Scripts/Windows OS Scripts",draft:!1,tags:[{label:"Scripts",permalink:"/docs/tags/scripts"},{label:"Re-usable Code",permalink:"/docs/tags/re-usable-code"}],version:"current",sidebarPosition:3,frontMatter:{id:"Windows OS Scripts",title:"Windows OS Scripts",hide_title:!1,hide_table_of_contents:!1,sidebar_label:"Windows OS Scripts",sidebar_position:3,toc_max_heading_level:4,pagination_label:"Windows OS Scripts",tags:["Scripts","Re-usable Code"],description:"Windows OS Scripts and re-usable code."},sidebar:"tutorialSidebar",previous:{title:"NSG Flow log Formatter",permalink:"/docs/Scripts/NSG Flow log Formatter"},next:{title:"Windows OS",permalink:"/docs/category/windows-os"}},c={},l=[{value:"Document Control",id:"document-control",level:2},{value:"Folder size report (Get-childitem)",id:"folder-size-report-get-childitem",level:2},{value:"Service Management (Stop-Service, Start-Service)",id:"service-management-stop-service-start-service",level:2}],p={toc:l},d="wrapper";function u(e){let{components:t,...r}=e;return(0,i.kt)(d,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"document-control"},"Document Control"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Created: 2023/03/30"),(0,i.kt)("li",{parentName:"ul"},"Last Updated: 2023/04/01")),(0,i.kt)("h2",{id:"folder-size-report-get-childitem"},"Folder size report (Get-childitem)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-powershell",metastring:"showLineNumbers",showLineNumbers:!0},'$startFolder = "C:\\Temp\\"\n\n$colItems = Get-ChildItem $startFolder | Where-Object {$_.PSIsContainer -eq $true} | Sort-Object\n\n$Output = foreach ($i in $colItems) {\n\n    $subFolderItems = Get-ChildItem $i.FullName -recurse -force | Where-Object {$_.PSIsContainer -eq $false} | Measure-Object -property Length -sum | Select-Object Sum\n    \n    New-Object psobject -property @{\n        "Size(GB)" = \u201c{0:N2}\u201d -f ($subFolderItems.sum /1GB)\n        "Location" = $i.FullName\n    }\n\n}\n# Output options\n$Output | ft -a \n# $Output | Export-csv -Path \'C:\\Temp\\FolderReport-$startFolder.csv\' -NoTypeInformation # Output as csv file to the designated location.\n')),(0,i.kt)("h2",{id:"service-management-stop-service-start-service"},"Service Management (Stop-Service, Start-Service)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-powershell",metastring:"showLineNumbers",showLineNumbers:!0},'\n$serviceName = Get-Service -Name "*ServiceName*"\n\nif ($serviceName.Status -ne \'Stopped\') {\n    <# Action to perform if the service is running still. #>\n    Write-Host  "The script has detected that the \' $serviceName.Name \' is still running." -ForegroundColor Yellow\n    WriteToLogFile "$(Get-Date) -  The $($serviceName.Name), is still running."\n    Start-Sleep 3\n    try {\n        Write-Progress -Activity "Attempting to stop the service"   -Status \'Stopping\' \n        WriteToLogFile "$(Get-Date) -  Attempting to stop the service."\n        Stop-Service -Name $serviceName.Name\n        Start-Sleep 5\n    }\n    catch {\n        Write-Host "An error occurred, see below error and the log for more information."\n    }\n\n    $serviceName = Get-Service -Name "*ServiceName*" # Stores the new service status in the variable.\n    Start-Sleep 2\n')))}u.isMDXComponent=!0}}]);