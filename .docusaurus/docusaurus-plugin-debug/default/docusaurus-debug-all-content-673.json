{
  "docusaurus-plugin-content-docs": {
    "default": {
      "loadedVersions": [
        {
          "versionName": "current",
          "label": "Next",
          "banner": null,
          "badge": false,
          "noIndex": false,
          "className": "docs-version-current",
          "path": "/docs/",
          "tagsPath": "/docs/tags",
          "isLast": true,
          "routePriority": -1,
          "sidebarFilePath": "C:\\Git\\The-IT-Knowledge-base\\sidebars.js",
          "contentPath": "C:\\Git\\The-IT-Knowledge-base\\docs",
          "contentPathLocalized": "C:\\Git\\The-IT-Knowledge-base\\i18n\\en\\docusaurus-plugin-content-docs\\current",
          "docs": [
            {
              "unversionedId": "Azure-Active-Directory/App-Registrations/Decom an Azure AD App",
              "id": "Azure-Active-Directory/App-Registrations/Decom an Azure AD App",
              "title": "Decom an Azure AD App",
              "description": "Suggested guidance for decommissioning an Azure AD App.",
              "source": "@site/docs/Azure-Active-Directory/App-Registrations/Decom-AAD-App.md",
              "sourceDirName": "Azure-Active-Directory/App-Registrations",
              "slug": "/Azure-Active-Directory/App-Registrations/Decom an Azure AD App",
              "permalink": "/docs/Azure-Active-Directory/App-Registrations/Decom an Azure AD App",
              "draft": false,
              "editUrl": "https://github.com/BassJamm/The-IT-Knowledge-base/",
              "tags": [
                {
                  "label": "AzureAD",
                  "permalink": "/docs/tags/azure-ad"
                },
                {
                  "label": "AppRegistrations",
                  "permalink": "/docs/tags/app-registrations"
                }
              ],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "sidebar_position": 1,
                "id": "Decom an Azure AD App",
                "title": "Decom an Azure AD App",
                "description": "Suggested guidance for decommissioning an Azure AD App.",
                "tags": [
                  "AzureAD",
                  "AppRegistrations"
                ],
                "custom_edit_url": "https://github.com/BassJamm/The-IT-Knowledge-base/"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "App Registrations",
                "permalink": "/docs/category/app-registrations"
              },
              "next": {
                "title": "Conditional Access",
                "permalink": "/docs/category/conditional-access"
              }
            },
            {
              "unversionedId": "Azure-Active-Directory/Conditional-Access/Useful Conditional Access Policies",
              "id": "Azure-Active-Directory/Conditional-Access/Useful Conditional Access Policies",
              "title": "Useful Conditional Access Policies",
              "description": "Descibes the settings an uses of some good Conditional Access policies to setup.",
              "source": "@site/docs/Azure-Active-Directory/Conditional-Access/Useful-Policies.md",
              "sourceDirName": "Azure-Active-Directory/Conditional-Access",
              "slug": "/Azure-Active-Directory/Conditional-Access/Useful Conditional Access Policies",
              "permalink": "/docs/Azure-Active-Directory/Conditional-Access/Useful Conditional Access Policies",
              "draft": false,
              "editUrl": "https://github.com/facebook/docusaurus/edit/main/docs/api-doc-markdown.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "draft": false,
                "id": "Useful Conditional Access Policies",
                "title": "Useful Conditional Access Policies",
                "hide_title": false,
                "hide_table_of_contents": false,
                "sidebar_label": "Useful CA Policies",
                "sidebar_position": 1,
                "toc_max_heading_level": 4,
                "pagination_label": "Useful CA Policies",
                "tags": [],
                "custom_edit_url": "https://github.com/facebook/docusaurus/edit/main/docs/api-doc-markdown.md",
                "description": "Descibes the settings an uses of some good Conditional Access policies to setup."
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Conditional Access",
                "permalink": "/docs/category/conditional-access"
              },
              "next": {
                "title": "Certificate Management",
                "permalink": "/docs/category/certificate-management"
              }
            },
            {
              "unversionedId": "Azure/Azure-Backup/Setup Azure Backup",
              "id": "Azure/Azure-Backup/Setup Azure Backup",
              "title": "Setup Azure Backup",
              "description": "Suggestions for setting up Azure Backup.",
              "source": "@site/docs/Azure/Azure-Backup/Setup-Azure-Backup.md",
              "sourceDirName": "Azure/Azure-Backup",
              "slug": "/Azure/Azure-Backup/Setup Azure Backup",
              "permalink": "/docs/Azure/Azure-Backup/Setup Azure Backup",
              "draft": false,
              "editUrl": "https://github.com/BassJamm/The-IT-Knowledge-base/blob/5543dc18b6c22eed57e767e6d130c28946d157c1/docs/Azure/Backup%20and%20Disaster%20Recovery/Setup%20Azure%20Backup.md",
              "tags": [
                {
                  "label": "Azure",
                  "permalink": "/docs/tags/azure"
                },
                {
                  "label": "Resource Creation",
                  "permalink": "/docs/tags/resource-creation"
                },
                {
                  "label": "Azure Backup",
                  "permalink": "/docs/tags/azure-backup"
                }
              ],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "draft": true,
                "sidebar_position": 1,
                "toc_max_heading_level": 4,
                "id": "Setup Azure Backup",
                "title": "Setup Azure Backup",
                "sidebar_label": "Setup Azure Backup",
                "description": "Suggestions for setting up Azure Backup.",
                "tags": [
                  "Azure",
                  "Resource Creation",
                  "Azure Backup"
                ],
                "custom_edit_url": "https://github.com/BassJamm/The-IT-Knowledge-base/blob/5543dc18b6c22eed57e767e6d130c28946d157c1/docs/Azure/Backup%20and%20Disaster%20Recovery/Setup%20Azure%20Backup.md"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Azure Backup",
                "permalink": "/docs/category/azure-backup"
              },
              "next": {
                "title": "Disks",
                "permalink": "/docs/category/disks"
              }
            },
            {
              "unversionedId": "Azure/Disks/Restore data from a Snapshot",
              "id": "Azure/Disks/Restore data from a Snapshot",
              "title": "Restore data from a Snapshot",
              "description": "Restore data from a Snapshot.",
              "source": "@site/docs/Azure/Disks/Restore-from-SnapShot.md",
              "sourceDirName": "Azure/Disks",
              "slug": "/Azure/Disks/Restore data from a Snapshot",
              "permalink": "/docs/Azure/Disks/Restore data from a Snapshot",
              "draft": false,
              "editUrl": null,
              "tags": [
                {
                  "label": "Azure",
                  "permalink": "/docs/tags/azure"
                },
                {
                  "label": "Snapshot",
                  "permalink": "/docs/tags/snapshot"
                },
                {
                  "label": "Restore",
                  "permalink": "/docs/tags/restore"
                }
              ],
              "version": "current",
              "sidebarPosition": 2,
              "frontMatter": {
                "sidebar_position": 2,
                "id": "Restore data from a Snapshot",
                "title": "Restore data from a Snapshot",
                "description": "Restore data from a Snapshot.",
                "tags": [
                  "Azure",
                  "Snapshot",
                  "Restore"
                ],
                "custom_edit_url": null
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Disks",
                "permalink": "/docs/category/disks"
              },
              "next": {
                "title": "Networking",
                "permalink": "/docs/category/networking"
              }
            },
            {
              "unversionedId": "Azure/Networking/Network Security Groups",
              "id": "Azure/Networking/Network Security Groups",
              "title": "Network Security Groups",
              "description": "Document outlines the key information about NSGs.",
              "source": "@site/docs/Azure/Networking/NSGs.md",
              "sourceDirName": "Azure/Networking",
              "slug": "/Azure/Networking/Network Security Groups",
              "permalink": "/docs/Azure/Networking/Network Security Groups",
              "draft": false,
              "editUrl": "https://github.com/facebook/docusaurus/edit/main/docs/api-doc-markdown.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "draft": false,
                "id": "Network Security Groups",
                "title": "Network Security Groups",
                "hide_title": false,
                "hide_table_of_contents": false,
                "sidebar_label": "Network Security Groups",
                "sidebar_position": 1,
                "toc_max_heading_level": 4,
                "pagination_label": "Network Security Groups",
                "tags": [],
                "custom_edit_url": "https://github.com/facebook/docusaurus/edit/main/docs/api-doc-markdown.md",
                "description": "Document outlines the key information about NSGs."
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Networking",
                "permalink": "/docs/category/networking"
              },
              "next": {
                "title": "Azure Active Directory",
                "permalink": "/docs/category/azure-active-directory"
              }
            },
            {
              "unversionedId": "Certificate-Mgmt/Formats and Conversions",
              "id": "Certificate-Mgmt/Formats and Conversions",
              "title": "Formats and Conversions",
              "description": "Reinstate admin privileges for a customer's Azure CSP subscriptions.",
              "source": "@site/docs/Certificate-Mgmt/Formats-&-Conversions.md",
              "sourceDirName": "Certificate-Mgmt",
              "slug": "/Certificate-Mgmt/Formats and Conversions",
              "permalink": "/docs/Certificate-Mgmt/Formats and Conversions",
              "draft": false,
              "editUrl": "https://github.com/facebook/docusaurus/edit/main/docs/api-doc-markdown.md",
              "tags": [
                {
                  "label": "Certificates",
                  "permalink": "/docs/tags/certificates"
                }
              ],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "draft": false,
                "id": "Formats and Conversions",
                "title": "Formats and Conversions",
                "hide_title": false,
                "hide_table_of_contents": false,
                "sidebar_label": "Formats and Conversions",
                "sidebar_position": 1,
                "toc_max_heading_level": 4,
                "pagination_label": "Formats and Conversions",
                "tags": [
                  "Certificates"
                ],
                "custom_edit_url": "https://github.com/facebook/docusaurus/edit/main/docs/api-doc-markdown.md",
                "description": "Reinstate admin privileges for a customer's Azure CSP subscriptions."
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Certificate Management",
                "permalink": "/docs/category/certificate-management"
              },
              "next": {
                "title": "Generating CSRs",
                "permalink": "/docs/Certificate-Mgmt/Generating CSRs"
              }
            },
            {
              "unversionedId": "Certificate-Mgmt/Generating CSRs",
              "id": "Certificate-Mgmt/Generating CSRs",
              "title": "Generating CSRs",
              "description": "Reinstate admin privileges for a customer's Azure CSP subscriptions.",
              "source": "@site/docs/Certificate-Mgmt/Generating-CSRs.md",
              "sourceDirName": "Certificate-Mgmt",
              "slug": "/Certificate-Mgmt/Generating CSRs",
              "permalink": "/docs/Certificate-Mgmt/Generating CSRs",
              "draft": false,
              "editUrl": "https://github.com/facebook/docusaurus/edit/main/docs/api-doc-markdown.md",
              "tags": [
                {
                  "label": "Certificates",
                  "permalink": "/docs/tags/certificates"
                }
              ],
              "version": "current",
              "sidebarPosition": 2,
              "frontMatter": {
                "draft": false,
                "id": "Generating CSRs",
                "title": "Generating CSRs",
                "hide_title": false,
                "hide_table_of_contents": false,
                "sidebar_label": "Generating CSRs",
                "sidebar_position": 2,
                "toc_max_heading_level": 4,
                "pagination_label": "Generating CSRs",
                "tags": [
                  "Certificates"
                ],
                "custom_edit_url": "https://github.com/facebook/docusaurus/edit/main/docs/api-doc-markdown.md",
                "description": "Reinstate admin privileges for a customer's Azure CSP subscriptions."
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Formats and Conversions",
                "permalink": "/docs/Certificate-Mgmt/Formats and Conversions"
              },
              "next": {
                "title": "Request a Certificate from internal CA",
                "permalink": "/docs/Certificate-Mgmt/Request a Certificate from internal CA"
              }
            },
            {
              "unversionedId": "Certificate-Mgmt/Request a Certificate from internal CA",
              "id": "Certificate-Mgmt/Request a Certificate from internal CA",
              "title": "Request a Certificate from internal CA",
              "description": "Requesting a Certificate from an Internal Certificate Authority.",
              "source": "@site/docs/Certificate-Mgmt/Request-a-Certificate-from-internal-CA.md",
              "sourceDirName": "Certificate-Mgmt",
              "slug": "/Certificate-Mgmt/Request a Certificate from internal CA",
              "permalink": "/docs/Certificate-Mgmt/Request a Certificate from internal CA",
              "draft": false,
              "editUrl": "https://github.com/facebook/docusaurus/edit/main/docs/api-doc-markdown.md",
              "tags": [
                {
                  "label": "Certificates",
                  "permalink": "/docs/tags/certificates"
                }
              ],
              "version": "current",
              "sidebarPosition": 3,
              "frontMatter": {
                "draft": false,
                "id": "Request a Certificate from internal CA",
                "title": "Request a Certificate from internal CA",
                "hide_title": false,
                "hide_table_of_contents": false,
                "sidebar_label": "Request a Certificate from internal CA",
                "sidebar_position": 3,
                "toc_max_heading_level": 4,
                "pagination_label": "Request a Certificate from internal CA",
                "tags": [
                  "Certificates"
                ],
                "custom_edit_url": "https://github.com/facebook/docusaurus/edit/main/docs/api-doc-markdown.md",
                "description": "Requesting a Certificate from an Internal Certificate Authority."
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Generating CSRs",
                "permalink": "/docs/Certificate-Mgmt/Generating CSRs"
              },
              "next": {
                "title": "Citrix",
                "permalink": "/docs/category/citrix"
              }
            },
            {
              "unversionedId": "Citrix/Updating a Citrix Cloud Image",
              "id": "Citrix/Updating a Citrix Cloud Image",
              "title": "Updating a Citrix Cloud Image",
              "description": "Reinstate admin privileges for a customer's Azure CSP subscriptions.",
              "source": "@site/docs/Citrix/Doc.md",
              "sourceDirName": "Citrix",
              "slug": "/Citrix/Updating a Citrix Cloud Image",
              "permalink": "/docs/Citrix/Updating a Citrix Cloud Image",
              "draft": false,
              "editUrl": "https://github.com/facebook/docusaurus/edit/main/docs/api-doc-markdown.md",
              "tags": [
                {
                  "label": "Citrix",
                  "permalink": "/docs/tags/citrix"
                }
              ],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "draft": false,
                "id": "Updating a Citrix Cloud Image",
                "title": "Updating a Citrix Cloud Image",
                "hide_title": false,
                "hide_table_of_contents": false,
                "sidebar_label": "Updating a Citrix Cloud Image",
                "sidebar_position": 1,
                "toc_max_heading_level": 4,
                "pagination_label": "Updating a Citrix Cloud Image",
                "tags": [
                  "Citrix"
                ],
                "custom_edit_url": "https://github.com/facebook/docusaurus/edit/main/docs/api-doc-markdown.md",
                "description": "Reinstate admin privileges for a customer's Azure CSP subscriptions."
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Citrix",
                "permalink": "/docs/category/citrix"
              },
              "next": {
                "title": "Intune",
                "permalink": "/docs/category/intune"
              }
            },
            {
              "unversionedId": "Intune/Application-Deployments/EveryOne Print",
              "id": "Intune/Application-Deployments/EveryOne Print",
              "title": "Deploy EveryOne Print",
              "description": "Documents how to deploy EveryOne Print.",
              "source": "@site/docs/Intune/Application-Deployments/Everyone-Print.md",
              "sourceDirName": "Intune/Application-Deployments",
              "slug": "/Intune/Application-Deployments/EveryOne Print",
              "permalink": "/docs/Intune/Application-Deployments/EveryOne Print",
              "draft": false,
              "editUrl": "https://github.com/facebook/docusaurus/edit/main/docs/api-doc-markdown.md",
              "tags": [
                {
                  "label": "Intune",
                  "permalink": "/docs/tags/intune"
                },
                {
                  "label": "Application",
                  "permalink": "/docs/tags/application"
                },
                {
                  "label": "Script",
                  "permalink": "/docs/tags/script"
                }
              ],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "draft": false,
                "id": "EveryOne Print",
                "title": "Deploy EveryOne Print",
                "hide_title": false,
                "hide_table_of_contents": false,
                "sidebar_label": "EveryOne Print",
                "sidebar_position": 1,
                "toc_max_heading_level": 4,
                "pagination_label": "EveryOne Print",
                "tags": [
                  "Intune",
                  "Application",
                  "Script"
                ],
                "custom_edit_url": "https://github.com/facebook/docusaurus/edit/main/docs/api-doc-markdown.md",
                "description": "Documents how to deploy EveryOne Print."
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Uninstall McAfee",
                "permalink": "/docs/Intune/Application-Deployments/Uninstall McAfee"
              },
              "next": {
                "title": "Autopilot",
                "permalink": "/docs/category/autopilot"
              }
            },
            {
              "unversionedId": "Intune/Application-Deployments/Uninstall McAfee",
              "id": "Intune/Application-Deployments/Uninstall McAfee",
              "title": "Uninstall McAfee",
              "description": "Documents how to deploy McAfee.",
              "source": "@site/docs/Intune/Application-Deployments/Destroy-McAfee.md",
              "sourceDirName": "Intune/Application-Deployments",
              "slug": "/Intune/Application-Deployments/Uninstall McAfee",
              "permalink": "/docs/Intune/Application-Deployments/Uninstall McAfee",
              "draft": false,
              "editUrl": "https://github.com/facebook/docusaurus/edit/main/docs/api-doc-markdown.md",
              "tags": [
                {
                  "label": "Intune",
                  "permalink": "/docs/tags/intune"
                },
                {
                  "label": "Application",
                  "permalink": "/docs/tags/application"
                },
                {
                  "label": "Script",
                  "permalink": "/docs/tags/script"
                }
              ],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "draft": false,
                "id": "Uninstall McAfee",
                "title": "Uninstall McAfee",
                "hide_title": false,
                "hide_table_of_contents": false,
                "sidebar_label": "Destroy McAfee",
                "sidebar_position": 1,
                "toc_max_heading_level": 4,
                "pagination_label": "Uninstall McAfee",
                "tags": [
                  "Intune",
                  "Application",
                  "Script"
                ],
                "custom_edit_url": "https://github.com/facebook/docusaurus/edit/main/docs/api-doc-markdown.md",
                "description": "Documents how to deploy McAfee."
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "App Deployments",
                "permalink": "/docs/category/app-deployments"
              },
              "next": {
                "title": "EveryOne Print",
                "permalink": "/docs/Intune/Application-Deployments/EveryOne Print"
              }
            },
            {
              "unversionedId": "Intune/Autopilot/Autopilot Setup Suggestions",
              "id": "Intune/Autopilot/Autopilot Setup Suggestions",
              "title": "Autopilot Setup Suggestions",
              "description": "Details some advice and things I have learnt when setting up Autopilot.",
              "source": "@site/docs/Intune/Autopilot/Autopilot-Setup-Suggestions.md",
              "sourceDirName": "Intune/Autopilot",
              "slug": "/Intune/Autopilot/Autopilot Setup Suggestions",
              "permalink": "/docs/Intune/Autopilot/Autopilot Setup Suggestions",
              "draft": false,
              "editUrl": "https://github.com/facebook/docusaurus/edit/main/docs/api-doc-markdown.md",
              "tags": [
                {
                  "label": "Autopilot",
                  "permalink": "/docs/tags/autopilot"
                },
                {
                  "label": "Intune",
                  "permalink": "/docs/tags/intune"
                }
              ],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "draft": false,
                "id": "Autopilot Setup Suggestions",
                "title": "Autopilot Setup Suggestions",
                "hide_title": false,
                "hide_table_of_contents": false,
                "sidebar_label": "Autopilot Setup Suggestions",
                "sidebar_position": 1,
                "toc_max_heading_level": 4,
                "pagination_label": "Autopilot Setup Suggestions",
                "tags": [
                  "Autopilot",
                  "Intune"
                ],
                "custom_edit_url": "https://github.com/facebook/docusaurus/edit/main/docs/api-doc-markdown.md",
                "description": "Details some advice and things I have learnt when setting up Autopilot."
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Autopilot",
                "permalink": "/docs/category/autopilot"
              },
              "next": {
                "title": "Diagnose Autopilot Errors",
                "permalink": "/docs/Intune/Autopilot/Diagnose Autopilot Errors"
              }
            },
            {
              "unversionedId": "Intune/Autopilot/Diagnose Autopilot Errors",
              "id": "Intune/Autopilot/Diagnose Autopilot Errors",
              "title": "Diagnose Autopilot Errors",
              "description": "Details how to review the Autopilot logs on a device.",
              "source": "@site/docs/Intune/Autopilot/Autopilot-Diagnostics.md",
              "sourceDirName": "Intune/Autopilot",
              "slug": "/Intune/Autopilot/Diagnose Autopilot Errors",
              "permalink": "/docs/Intune/Autopilot/Diagnose Autopilot Errors",
              "draft": false,
              "editUrl": "https://github.com/facebook/docusaurus/edit/main/docs/api-doc-markdown.md",
              "tags": [
                {
                  "label": "Autopilot",
                  "permalink": "/docs/tags/autopilot"
                },
                {
                  "label": "Intune",
                  "permalink": "/docs/tags/intune"
                }
              ],
              "version": "current",
              "sidebarPosition": 2,
              "frontMatter": {
                "draft": false,
                "id": "Diagnose Autopilot Errors",
                "title": "Diagnose Autopilot Errors",
                "hide_title": false,
                "hide_table_of_contents": false,
                "sidebar_label": "Diagnose Autopilot Errors",
                "sidebar_position": 2,
                "toc_max_heading_level": 4,
                "pagination_label": "Diagnose Autopilot Errors",
                "tags": [
                  "Autopilot",
                  "Intune"
                ],
                "custom_edit_url": "https://github.com/facebook/docusaurus/edit/main/docs/api-doc-markdown.md",
                "description": "Details how to review the Autopilot logs on a device."
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Autopilot Setup Suggestions",
                "permalink": "/docs/Intune/Autopilot/Autopilot Setup Suggestions"
              },
              "next": {
                "title": "Device Config/On-boarding",
                "permalink": "/docs/category/device-configon-boarding"
              }
            },
            {
              "unversionedId": "Intune/Device-Configuration-&-Oboarding/Windows Device Config",
              "id": "Intune/Device-Configuration-&-Oboarding/Windows Device Config",
              "title": "Useful Windows Device Configuration",
              "description": "This doc lists out the basic configurations for Windows in intune.",
              "source": "@site/docs/Intune/Device-Configuration-&-Oboarding/Windows-Device-Config.md",
              "sourceDirName": "Intune/Device-Configuration-&-Oboarding",
              "slug": "/Intune/Device-Configuration-&-Oboarding/Windows Device Config",
              "permalink": "/docs/Intune/Device-Configuration-&-Oboarding/Windows Device Config",
              "draft": false,
              "editUrl": "https://github.com/facebook/docusaurus/edit/main/docs/api-doc-markdown.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "draft": false,
                "id": "Windows Device Config",
                "title": "Useful Windows Device Configuration",
                "hide_title": false,
                "hide_table_of_contents": false,
                "sidebar_label": "Windows Device Config",
                "sidebar_position": 1,
                "toc_max_heading_level": 4,
                "pagination_label": "Windows Device Config",
                "tags": [],
                "custom_edit_url": "https://github.com/facebook/docusaurus/edit/main/docs/api-doc-markdown.md",
                "description": "This doc lists out the basic configurations for Windows in intune."
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Device Config/On-boarding",
                "permalink": "/docs/category/device-configon-boarding"
              },
              "next": {
                "title": "Remediation Scripts",
                "permalink": "/docs/category/remediation-scripts"
              }
            },
            {
              "unversionedId": "Intune/Remediation-Scripts/Remediation Scripts",
              "id": "Intune/Remediation-Scripts/Remediation Scripts",
              "title": "Remediation Scripts",
              "description": "Document contains remediation scripts for use.",
              "source": "@site/docs/Intune/Remediation-Scripts/Remediation-Scripts.md",
              "sourceDirName": "Intune/Remediation-Scripts",
              "slug": "/Intune/Remediation-Scripts/",
              "permalink": "/docs/Intune/Remediation-Scripts/",
              "draft": false,
              "editUrl": "https://github.com/facebook/docusaurus/edit/main/docs/api-doc-markdown.md",
              "tags": [
                {
                  "label": "Intune",
                  "permalink": "/docs/tags/intune"
                },
                {
                  "label": "Remediation",
                  "permalink": "/docs/tags/remediation"
                },
                {
                  "label": "Scripts",
                  "permalink": "/docs/tags/scripts"
                }
              ],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "draft": false,
                "id": "Remediation Scripts",
                "title": "Remediation Scripts",
                "hide_title": false,
                "hide_table_of_contents": false,
                "sidebar_label": "Remediation Scripts",
                "sidebar_position": 1,
                "toc_max_heading_level": 4,
                "pagination_label": "Remediation Scripts",
                "tags": [
                  "Intune",
                  "Remediation",
                  "Scripts"
                ],
                "custom_edit_url": "https://github.com/facebook/docusaurus/edit/main/docs/api-doc-markdown.md",
                "description": "Document contains remediation scripts for use."
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Remediation Scripts",
                "permalink": "/docs/category/remediation-scripts"
              },
              "next": {
                "title": "PowerShell",
                "permalink": "/docs/category/powershell"
              }
            },
            {
              "unversionedId": "PowerShell/Az/Code Snippet",
              "id": "PowerShell/Az/Code Snippet",
              "title": "Code Snippet",
              "description": "All things PowerShell.",
              "source": "@site/docs/PowerShell/Az/Code-Snippet.md",
              "sourceDirName": "PowerShell/Az",
              "slug": "/PowerShell/Az/Code Snippet",
              "permalink": "/docs/PowerShell/Az/Code Snippet",
              "draft": false,
              "editUrl": "https://github.com/facebook/docusaurus/edit/main/docs/api-doc-markdown.md",
              "tags": [
                {
                  "label": "Command Line",
                  "permalink": "/docs/tags/command-line"
                },
                {
                  "label": "PowerShell",
                  "permalink": "/docs/tags/power-shell"
                }
              ],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "draft": false,
                "id": "Code Snippet",
                "title": "Code Snippet",
                "hide_title": false,
                "hide_table_of_contents": false,
                "sidebar_label": "Code Snippet",
                "sidebar_position": 1,
                "toc_max_heading_level": 4,
                "pagination_label": "Code Snippet",
                "tags": [
                  "Command Line",
                  "PowerShell"
                ],
                "custom_edit_url": "https://github.com/facebook/docusaurus/edit/main/docs/api-doc-markdown.md",
                "description": "All things PowerShell."
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Azure Module",
                "permalink": "/docs/category/azure-module"
              },
              "next": {
                "title": "Command Reference",
                "permalink": "/docs/PowerShell/Az/Command Reference"
              }
            },
            {
              "unversionedId": "PowerShell/Az/Command Reference",
              "id": "PowerShell/Az/Command Reference",
              "title": "Command Reference",
              "description": "All things PowerShell.",
              "source": "@site/docs/PowerShell/Az/Command-Reference.md",
              "sourceDirName": "PowerShell/Az",
              "slug": "/PowerShell/Az/Command Reference",
              "permalink": "/docs/PowerShell/Az/Command Reference",
              "draft": false,
              "editUrl": "https://github.com/facebook/docusaurus/edit/main/docs/api-doc-markdown.md",
              "tags": [
                {
                  "label": "Command Line",
                  "permalink": "/docs/tags/command-line"
                },
                {
                  "label": "PowerShell",
                  "permalink": "/docs/tags/power-shell"
                }
              ],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "draft": false,
                "id": "Command Reference",
                "title": "Command Reference",
                "hide_title": false,
                "hide_table_of_contents": false,
                "sidebar_label": "Command Reference",
                "sidebar_position": 1,
                "toc_max_heading_level": 4,
                "pagination_label": "Command Reference",
                "tags": [
                  "Command Line",
                  "PowerShell"
                ],
                "custom_edit_url": "https://github.com/facebook/docusaurus/edit/main/docs/api-doc-markdown.md",
                "description": "All things PowerShell."
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Code Snippet",
                "permalink": "/docs/PowerShell/Az/Code Snippet"
              },
              "next": {
                "title": "Git",
                "permalink": "/docs/category/git"
              }
            },
            {
              "unversionedId": "PowerShell/Git/Git Cheatsheet",
              "id": "PowerShell/Git/Git Cheatsheet",
              "title": "Git Cheatsheet",
              "description": "Git command line refernce.",
              "source": "@site/docs/PowerShell/Git/Git-cheatsheet.md",
              "sourceDirName": "PowerShell/Git",
              "slug": "/PowerShell/Git/Git Cheatsheet",
              "permalink": "/docs/PowerShell/Git/Git Cheatsheet",
              "draft": false,
              "editUrl": "https://github.com/facebook/docusaurus/edit/main/docs/api-doc-markdown.md",
              "tags": [
                {
                  "label": "Git",
                  "permalink": "/docs/tags/git"
                },
                {
                  "label": "Command-Line-Ref",
                  "permalink": "/docs/tags/command-line-ref"
                }
              ],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "draft": false,
                "id": "Git Cheatsheet",
                "title": "Git Cheatsheet",
                "hide_title": false,
                "hide_table_of_contents": false,
                "sidebar_label": "Git Cheatsheet",
                "sidebar_position": 1,
                "toc_max_heading_level": 4,
                "pagination_label": "Git Cheatsheet",
                "tags": [
                  "Git",
                  "Command-Line-Ref"
                ],
                "custom_edit_url": "https://github.com/facebook/docusaurus/edit/main/docs/api-doc-markdown.md",
                "description": "Git command line refernce."
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Git",
                "permalink": "/docs/category/git"
              },
              "next": {
                "title": "PowerShell",
                "permalink": "/docs/category/powershell-1"
              }
            },
            {
              "unversionedId": "PowerShell/PowerShell/Code-Snippets",
              "id": "PowerShell/PowerShell/Code-Snippets",
              "title": "Code-Snippets",
              "description": "All things PowerShell.",
              "source": "@site/docs/PowerShell/PowerShell/Code-Snippets.md",
              "sourceDirName": "PowerShell/PowerShell",
              "slug": "/PowerShell/PowerShell/Code-Snippets",
              "permalink": "/docs/PowerShell/PowerShell/Code-Snippets",
              "draft": false,
              "editUrl": "https://github.com/facebook/docusaurus/edit/main/docs/api-doc-markdown.md",
              "tags": [
                {
                  "label": "Command Line",
                  "permalink": "/docs/tags/command-line"
                },
                {
                  "label": "PowerShell",
                  "permalink": "/docs/tags/power-shell"
                }
              ],
              "version": "current",
              "sidebarPosition": 4,
              "frontMatter": {
                "draft": false,
                "id": "Code-Snippets",
                "title": "Code-Snippets",
                "hide_title": false,
                "hide_table_of_contents": false,
                "sidebar_label": "Code-Snippets",
                "sidebar_position": 4,
                "toc_max_heading_level": 4,
                "pagination_label": "Code-Snippets",
                "tags": [
                  "Command Line",
                  "PowerShell"
                ],
                "custom_edit_url": "https://github.com/facebook/docusaurus/edit/main/docs/api-doc-markdown.md",
                "description": "All things PowerShell."
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "PowerShell",
                "permalink": "/docs/category/powershell-1"
              },
              "next": {
                "title": "Command Reference",
                "permalink": "/docs/PowerShell/PowerShell/Command Reference"
              }
            },
            {
              "unversionedId": "PowerShell/PowerShell/Command Reference",
              "id": "PowerShell/PowerShell/Command Reference",
              "title": "Command Reference",
              "description": "All things PowerShell.",
              "source": "@site/docs/PowerShell/PowerShell/Command-Reference.md",
              "sourceDirName": "PowerShell/PowerShell",
              "slug": "/PowerShell/PowerShell/Command Reference",
              "permalink": "/docs/PowerShell/PowerShell/Command Reference",
              "draft": false,
              "editUrl": "https://github.com/facebook/docusaurus/edit/main/docs/api-doc-markdown.md",
              "tags": [
                {
                  "label": "Command Line",
                  "permalink": "/docs/tags/command-line"
                },
                {
                  "label": "PowerShell",
                  "permalink": "/docs/tags/power-shell"
                }
              ],
              "version": "current",
              "sidebarPosition": 4,
              "frontMatter": {
                "draft": false,
                "id": "Command Reference",
                "title": "Command Reference",
                "hide_title": false,
                "hide_table_of_contents": false,
                "sidebar_label": "Command Reference",
                "sidebar_position": 4,
                "toc_max_heading_level": 4,
                "pagination_label": "Command Reference",
                "tags": [
                  "Command Line",
                  "PowerShell"
                ],
                "custom_edit_url": "https://github.com/facebook/docusaurus/edit/main/docs/api-doc-markdown.md",
                "description": "All things PowerShell."
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Code-Snippets",
                "permalink": "/docs/PowerShell/PowerShell/Code-Snippets"
              },
              "next": {
                "title": "SharePoint",
                "permalink": "/docs/category/sharepoint"
              }
            },
            {
              "unversionedId": "SharePoint/Grant access to a User’s OneDrive",
              "id": "SharePoint/Grant access to a User’s OneDrive",
              "title": "Grant access to a User’s OneDrive",
              "description": "Docuemnt describes how to give access to a user's OneDrive using the Admin centre.",
              "source": "@site/docs/SharePoint/Access-a-leavers-OneDrive.md",
              "sourceDirName": "SharePoint",
              "slug": "/SharePoint/Grant access to a User’s OneDrive",
              "permalink": "/docs/SharePoint/Grant access to a User’s OneDrive",
              "draft": false,
              "editUrl": "https://github.com/facebook/docusaurus/edit/main/docs/api-doc-markdown.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "draft": false,
                "id": "Grant access to a User’s OneDrive",
                "title": "Grant access to a User’s OneDrive",
                "hide_title": false,
                "hide_table_of_contents": false,
                "sidebar_label": "Grant access to a User’s OneDrive",
                "sidebar_position": 1,
                "toc_max_heading_level": 4,
                "pagination_label": "Grant access to a User’s OneDrive",
                "tags": [],
                "custom_edit_url": "https://github.com/facebook/docusaurus/edit/main/docs/api-doc-markdown.md",
                "description": "Docuemnt describes how to give access to a user's OneDrive using the Admin centre."
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "SharePoint",
                "permalink": "/docs/category/sharepoint"
              },
              "next": {
                "title": "Windows OS",
                "permalink": "/docs/category/windows-os"
              }
            },
            {
              "unversionedId": "Welcome",
              "id": "Welcome",
              "title": "Welcome to the Wiki",
              "description": "This documentation is an almagamation of my knowledge and experiences, to hopefully provide myself and others with reference material for their jobs and hobbies.",
              "source": "@site/docs/Welcome.md",
              "sourceDirName": ".",
              "slug": "/",
              "permalink": "/docs/",
              "draft": false,
              "tags": [],
              "version": "current",
              "sidebarPosition": 0,
              "frontMatter": {
                "slug": "/",
                "sidebar_position": 0,
                "Id": "Welcome to the Wiki",
                "title": "Welcome to the Wiki"
              },
              "sidebar": "tutorialSidebar",
              "next": {
                "title": "Azure",
                "permalink": "/docs/category/azure"
              }
            },
            {
              "unversionedId": "Windows-OS/Defender-for-Endpoint/Check Defender AV Status",
              "id": "Windows-OS/Defender-for-Endpoint/Check Defender AV Status",
              "title": "Check Defender AV Status",
              "description": "The variouse options for checking the AV status on a Windows (desktop) device.",
              "source": "@site/docs/Windows-OS/Defender-for-Endpoint/Check-av-status.md",
              "sourceDirName": "Windows-OS/Defender-for-Endpoint",
              "slug": "/Windows-OS/Defender-for-Endpoint/Check Defender AV Status",
              "permalink": "/docs/Windows-OS/Defender-for-Endpoint/Check Defender AV Status",
              "draft": false,
              "editUrl": "https://github.com/facebook/docusaurus/edit/main/docs/api-doc-markdown.md",
              "tags": [
                {
                  "label": "WindowsOS",
                  "permalink": "/docs/tags/windows-os"
                },
                {
                  "label": "DefenderFE",
                  "permalink": "/docs/tags/defender-fe"
                }
              ],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "draft": false,
                "id": "Check Defender AV Status",
                "title": "Check Defender AV Status",
                "hide_title": false,
                "hide_table_of_contents": false,
                "sidebar_label": "Check Defender AV Status",
                "sidebar_position": 1,
                "toc_max_heading_level": 4,
                "pagination_label": "Check Defender AV Status",
                "tags": [
                  "WindowsOS",
                  "DefenderFE"
                ],
                "custom_edit_url": "https://github.com/facebook/docusaurus/edit/main/docs/api-doc-markdown.md",
                "description": "The variouse options for checking the AV status on a Windows (desktop) device."
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Defender for Endpoint",
                "permalink": "/docs/category/defender-for-endpoint"
              },
              "next": {
                "title": "Office Apps",
                "permalink": "/docs/category/office-apps"
              }
            },
            {
              "unversionedId": "Windows-OS/Office-Apps/Calendar Sharing Error",
              "id": "Windows-OS/Office-Apps/Calendar Sharing Error",
              "title": "Calendar Sharing Error",
              "description": "This document outlines a possible solution to a specific calendar sharing error for an org.",
              "source": "@site/docs/Windows-OS/Office-Apps/MS-Outlook-Invite-error.md",
              "sourceDirName": "Windows-OS/Office-Apps",
              "slug": "/Windows-OS/Office-Apps/Calendar Sharing Error",
              "permalink": "/docs/Windows-OS/Office-Apps/Calendar Sharing Error",
              "draft": false,
              "editUrl": "https://github.com/facebook/docusaurus/edit/main/docs/api-doc-markdown.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "draft": false,
                "id": "Calendar Sharing Error",
                "title": "Calendar Sharing Error",
                "hide_title": false,
                "hide_table_of_contents": false,
                "sidebar_label": "Calendar Sharing Error",
                "sidebar_position": 1,
                "toc_max_heading_level": 4,
                "pagination_label": "Calendar Sharing Error",
                "tags": [],
                "custom_edit_url": "https://github.com/facebook/docusaurus/edit/main/docs/api-doc-markdown.md",
                "description": "This document outlines a possible solution to a specific calendar sharing error for an org."
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Office Apps",
                "permalink": "/docs/category/office-apps"
              }
            }
          ],
          "drafts": [],
          "sidebars": {
            "tutorialSidebar": [
              {
                "type": "doc",
                "id": "Welcome"
              },
              {
                "type": "category",
                "label": "Azure",
                "collapsible": true,
                "collapsed": true,
                "items": [
                  {
                    "type": "category",
                    "label": "Azure Backup",
                    "collapsible": true,
                    "collapsed": true,
                    "items": [
                      {
                        "type": "doc",
                        "id": "Azure/Azure-Backup/Setup Azure Backup",
                        "label": "Setup Azure Backup"
                      }
                    ],
                    "link": {
                      "type": "generated-index",
                      "description": "Azure Docs.",
                      "slug": "/category/azure-backup",
                      "permalink": "/docs/category/azure-backup"
                    }
                  },
                  {
                    "type": "category",
                    "label": "Disks",
                    "collapsible": true,
                    "collapsed": true,
                    "items": [
                      {
                        "type": "doc",
                        "id": "Azure/Disks/Restore data from a Snapshot"
                      }
                    ],
                    "link": {
                      "type": "generated-index",
                      "description": "Azure Docs.",
                      "slug": "/category/disks",
                      "permalink": "/docs/category/disks"
                    }
                  },
                  {
                    "type": "category",
                    "label": "Networking",
                    "collapsible": true,
                    "collapsed": true,
                    "items": [
                      {
                        "type": "doc",
                        "id": "Azure/Networking/Network Security Groups",
                        "label": "Network Security Groups"
                      }
                    ],
                    "link": {
                      "type": "generated-index",
                      "description": "Azure Docs.",
                      "slug": "/category/networking",
                      "permalink": "/docs/category/networking"
                    }
                  }
                ],
                "link": {
                  "type": "generated-index",
                  "description": "Azure Docs.",
                  "slug": "/category/azure",
                  "permalink": "/docs/category/azure"
                }
              },
              {
                "type": "category",
                "label": "Azure Active Directory",
                "collapsible": true,
                "collapsed": true,
                "items": [
                  {
                    "type": "category",
                    "label": "App Registrations",
                    "collapsible": true,
                    "collapsed": true,
                    "items": [
                      {
                        "type": "doc",
                        "id": "Azure-Active-Directory/App-Registrations/Decom an Azure AD App"
                      }
                    ],
                    "link": {
                      "type": "generated-index",
                      "slug": "/category/app-registrations",
                      "permalink": "/docs/category/app-registrations"
                    }
                  },
                  {
                    "type": "category",
                    "label": "Conditional Access",
                    "collapsible": true,
                    "collapsed": true,
                    "items": [
                      {
                        "type": "doc",
                        "id": "Azure-Active-Directory/Conditional-Access/Useful Conditional Access Policies",
                        "label": "Useful CA Policies"
                      }
                    ],
                    "link": {
                      "type": "generated-index",
                      "slug": "/category/conditional-access",
                      "permalink": "/docs/category/conditional-access"
                    }
                  }
                ],
                "link": {
                  "type": "generated-index",
                  "slug": "/category/azure-active-directory",
                  "permalink": "/docs/category/azure-active-directory"
                }
              },
              {
                "type": "category",
                "label": "Certificate Management",
                "collapsible": true,
                "collapsed": true,
                "items": [
                  {
                    "type": "doc",
                    "id": "Certificate-Mgmt/Formats and Conversions",
                    "label": "Formats and Conversions"
                  },
                  {
                    "type": "doc",
                    "id": "Certificate-Mgmt/Generating CSRs",
                    "label": "Generating CSRs"
                  },
                  {
                    "type": "doc",
                    "id": "Certificate-Mgmt/Request a Certificate from internal CA",
                    "label": "Request a Certificate from internal CA"
                  }
                ],
                "link": {
                  "type": "generated-index",
                  "slug": "/category/certificate-management",
                  "permalink": "/docs/category/certificate-management"
                }
              },
              {
                "type": "category",
                "label": "Citrix",
                "collapsible": true,
                "collapsed": true,
                "items": [
                  {
                    "type": "doc",
                    "id": "Citrix/Updating a Citrix Cloud Image",
                    "label": "Updating a Citrix Cloud Image"
                  }
                ],
                "link": {
                  "type": "generated-index",
                  "slug": "/category/citrix",
                  "permalink": "/docs/category/citrix"
                }
              },
              {
                "type": "category",
                "label": "Intune",
                "collapsible": true,
                "collapsed": true,
                "items": [
                  {
                    "type": "category",
                    "label": "App Deployments",
                    "collapsible": true,
                    "collapsed": true,
                    "items": [
                      {
                        "type": "doc",
                        "id": "Intune/Application-Deployments/Uninstall McAfee",
                        "label": "Destroy McAfee"
                      },
                      {
                        "type": "doc",
                        "id": "Intune/Application-Deployments/EveryOne Print",
                        "label": "EveryOne Print"
                      }
                    ],
                    "link": {
                      "type": "generated-index",
                      "slug": "/category/app-deployments",
                      "permalink": "/docs/category/app-deployments"
                    }
                  },
                  {
                    "type": "category",
                    "label": "Autopilot",
                    "collapsible": true,
                    "collapsed": true,
                    "items": [
                      {
                        "type": "doc",
                        "id": "Intune/Autopilot/Autopilot Setup Suggestions",
                        "label": "Autopilot Setup Suggestions"
                      },
                      {
                        "type": "doc",
                        "id": "Intune/Autopilot/Diagnose Autopilot Errors",
                        "label": "Diagnose Autopilot Errors"
                      }
                    ],
                    "link": {
                      "type": "generated-index",
                      "slug": "/category/autopilot",
                      "permalink": "/docs/category/autopilot"
                    }
                  },
                  {
                    "type": "category",
                    "label": "Device Config/On-boarding",
                    "collapsible": true,
                    "collapsed": true,
                    "items": [
                      {
                        "type": "doc",
                        "id": "Intune/Device-Configuration-&-Oboarding/Windows Device Config",
                        "label": "Windows Device Config"
                      }
                    ],
                    "link": {
                      "type": "generated-index",
                      "slug": "/category/device-configon-boarding",
                      "permalink": "/docs/category/device-configon-boarding"
                    }
                  },
                  {
                    "type": "category",
                    "label": "Remediation Scripts",
                    "collapsible": true,
                    "collapsed": true,
                    "items": [
                      {
                        "type": "doc",
                        "id": "Intune/Remediation-Scripts/Remediation Scripts",
                        "label": "Remediation Scripts"
                      }
                    ],
                    "link": {
                      "type": "generated-index",
                      "slug": "/category/remediation-scripts",
                      "permalink": "/docs/category/remediation-scripts"
                    }
                  }
                ],
                "link": {
                  "type": "generated-index",
                  "slug": "/category/intune",
                  "permalink": "/docs/category/intune"
                }
              },
              {
                "type": "category",
                "label": "PowerShell",
                "collapsible": true,
                "collapsed": true,
                "items": [
                  {
                    "type": "category",
                    "label": "Azure Module",
                    "collapsible": true,
                    "collapsed": true,
                    "items": [
                      {
                        "type": "doc",
                        "id": "PowerShell/Az/Code Snippet",
                        "label": "Code Snippet"
                      },
                      {
                        "type": "doc",
                        "id": "PowerShell/Az/Command Reference",
                        "label": "Command Reference"
                      }
                    ],
                    "link": {
                      "type": "generated-index",
                      "slug": "/category/azure-module",
                      "permalink": "/docs/category/azure-module"
                    }
                  },
                  {
                    "type": "category",
                    "label": "Git",
                    "collapsible": true,
                    "collapsed": true,
                    "items": [
                      {
                        "type": "doc",
                        "id": "PowerShell/Git/Git Cheatsheet",
                        "label": "Git Cheatsheet"
                      }
                    ],
                    "link": {
                      "type": "generated-index",
                      "slug": "/category/git",
                      "permalink": "/docs/category/git"
                    }
                  },
                  {
                    "type": "category",
                    "label": "PowerShell",
                    "collapsible": true,
                    "collapsed": true,
                    "items": [
                      {
                        "type": "doc",
                        "id": "PowerShell/PowerShell/Code-Snippets",
                        "label": "Code-Snippets"
                      },
                      {
                        "type": "doc",
                        "id": "PowerShell/PowerShell/Command Reference",
                        "label": "Command Reference"
                      }
                    ],
                    "link": {
                      "type": "generated-index",
                      "slug": "/category/powershell-1",
                      "permalink": "/docs/category/powershell-1"
                    }
                  }
                ],
                "link": {
                  "type": "generated-index",
                  "slug": "/category/powershell",
                  "permalink": "/docs/category/powershell"
                }
              },
              {
                "type": "category",
                "label": "SharePoint",
                "collapsible": true,
                "collapsed": true,
                "items": [
                  {
                    "type": "doc",
                    "id": "SharePoint/Grant access to a User’s OneDrive",
                    "label": "Grant access to a User’s OneDrive"
                  }
                ],
                "link": {
                  "type": "generated-index",
                  "slug": "/category/sharepoint",
                  "permalink": "/docs/category/sharepoint"
                }
              },
              {
                "type": "category",
                "label": "Windows OS",
                "collapsible": true,
                "collapsed": true,
                "items": [
                  {
                    "type": "category",
                    "label": "Defender for Endpoint",
                    "collapsible": true,
                    "collapsed": true,
                    "items": [
                      {
                        "type": "doc",
                        "id": "Windows-OS/Defender-for-Endpoint/Check Defender AV Status",
                        "label": "Check Defender AV Status"
                      }
                    ],
                    "link": {
                      "type": "generated-index",
                      "slug": "/category/defender-for-endpoint",
                      "permalink": "/docs/category/defender-for-endpoint"
                    }
                  },
                  {
                    "type": "category",
                    "label": "Office Apps",
                    "collapsible": true,
                    "collapsed": true,
                    "items": [
                      {
                        "type": "doc",
                        "id": "Windows-OS/Office-Apps/Calendar Sharing Error",
                        "label": "Calendar Sharing Error"
                      }
                    ],
                    "link": {
                      "type": "generated-index",
                      "slug": "/category/office-apps",
                      "permalink": "/docs/category/office-apps"
                    }
                  }
                ],
                "link": {
                  "type": "generated-index",
                  "slug": "/category/windows-os",
                  "permalink": "/docs/category/windows-os"
                }
              }
            ]
          }
        }
      ]
    }
  },
  "docusaurus-plugin-content-blog": {
    "default": {
      "blogSidebarTitle": "Posts So Far",
      "blogPosts": [
        {
          "id": "Automate-scripts-in-Azure",
          "metadata": {
            "permalink": "/blog/Automate-scripts-in-Azure",
            "source": "@site/blog/2023-10-27-Automation-Account/Setup-Automation-Account.md",
            "title": "Automate Scripts in Azure",
            "description": "Setting up an Automation Account in Azure to script things.",
            "date": "2023-10-27T15:00:00.000Z",
            "formattedDate": "October 27, 2023",
            "tags": [
              {
                "label": "Azure",
                "permalink": "/blog/tags/azure"
              },
              {
                "label": "Automation",
                "permalink": "/blog/tags/automation"
              },
              {
                "label": "Scripting",
                "permalink": "/blog/tags/scripting"
              }
            ],
            "readingTime": 6.32,
            "hasTruncateMarker": true,
            "authors": [
              {
                "name": "Will",
                "title": "Creator of the IT KB.",
                "url": "https://github.com/BassJamm?tab=repositories"
              }
            ],
            "frontMatter": {
              "title": "Automate Scripts in Azure",
              "description": "Setting up an Automation Account in Azure to script things.",
              "slug": "Automate-scripts-in-Azure",
              "date": "2023-10-27T15:00",
              "authors": [
                {
                  "name": "Will",
                  "title": "Creator of the IT KB.",
                  "url": "https://github.com/BassJamm?tab=repositories"
                }
              ],
              "tags": [
                "Azure",
                "Automation",
                "Scripting"
              ],
              "image": "https://i.imgur.com/mErPwqL.png",
              "hide_table_of_contents": false
            },
            "nextItem": {
              "title": "Azure ligthhouse Setup",
              "permalink": "/blog/Setup-Azure-Lighthouse"
            }
          },
          "content": "In this post, are some steps for setting up an Automation account for running scripts against Azure AD. As well as lessons and tips I learnt along the way.\r\n\r\n<!--truncate-->\r\n\r\nAzure Automation Accounts are a cloud-based service in Microsoft Azure designed to simplify and streamline routine IT management tasks. They provide an efficient way to automate, schedule, and orchestrate repetitive processes, helping organizations save time, reduce errors, and improve operational efficiency.\r\n\r\n## What's my goal for this?\r\n\r\nMy situation is this: I frequently receive requests to generate reports from Azure AD and Intune (Endpoint Manager). These requests occur on a monthly or, in some cases, a weekly basis, especially when there's an ongoing issue being troublshooted that impacts the reporting.\r\n\r\nEach time I get a report request, I have to log into the environment, execute my script, and send the report via email to the same suspects. While this process may not seem overly burdensome, the scripts are on my machine (archaic I know), I wrote them and I think, that noone else should have to be running them manually!\r\n\r\nTo simplify this, I aim to automate the scripts on a monthly schedule and retain the flexibility to run them whenever needed.\r\n\r\n:::note The Information from here on out.\r\n\r\nAll of the informaiton below is from my setting this up for the 1st time and noting down what I have done and any issues I come across. If you want best practices etc, check out the Microsoft docs.\r\n\r\n:::\r\n\r\n## Outline\r\n\r\n:::danger Run As accounts deprecation\r\nRun As accounts are being deprecated, managed identities are replacing this.\r\n:::\r\n\r\n1. Setup the Resource Group and Automation Account.\r\n2. Setup the Identity for the Automation Account, this is key to running scripts gainst Azure Active Directoy and Office 365 resources. \r\n3. Create ourselves a Runbook, that sits inside the Automation Account. \r\n4. Install the relevant modules for the code we want to run.\r\n5. Write ourselves a little script.\r\n6. Setup a schedule for the Runbook.\r\n\r\n## Setup the Resource Group and Automation Account\r\n\r\n:::note Assumption of you \"knowing what you are doing\"\r\n\r\nI (maybe wrongly so) am assuming you have setup Azure resources before and know the basics of this process.\r\n\r\n:::\r\n\r\nBefore you charge into this part.\r\n\r\nMake sure you Select the same region as the resources you want to query, if the account is to query something else, like Azure AD or Office 365, the region is not so important. Also, have a good idea what your security requirments are for the Automation Account.\r\n\r\nSetup the Automation Account:\r\n\r\n1. Navigate to the Azure portal.\r\n2. **Search** for Automation Account in the search bar.\r\n3. Select the **Automation Account** option, **Click create** in the middle of the screen **or Click +Add** in the top left.\r\n4. Fill in the necessary information.\r\n\r\n:::info When you Select the Advanced Tab\r\n\r\nHere you can decide whether you want to use a System assigned or User Assigned Identity. Long story short, the System Assigned Identity can only be used by this one Automation Account, the User Assigned Identity can be used by multiple resources.\r\n\r\n:::\r\n\r\n## Apply permissions to Managed(System assigned) Identity\r\n\r\nYou'll need to apply the permissions to the Managed Identity using PowerShell unfortunatly, a Microsoft seem to have decided to make this difficult for us!\r\n\r\n- [Reference for where this came from](https://aztoso.com/security/microsoft-graph-permissions-managed-identity/.)\r\n- [Microsoft reference for command](https://learn.microsoft.com/en-us/powershell/module/azuread/new-azureadserviceapproleassignment?view=azureadps-2.0).\r\n\r\n:::caution Role names\r\nYou'll need to find the correct role\\permission name that you want to assign using the script below. [Try this Microsoft doc for the Microosft Graph API permissions](https://learn.microsoft.com/en-us/graph/api/overview?view=graph-rest-1.0).\r\n:::\r\n\r\n## The command\r\n\r\nThe below is a script you can run but, you can run it line by line to see what is going on if that's more comfortable. The general gist is that you are applying the permissions from the Microsoft Graph App to your Managed Identity.\r\n\r\nAnnotated the hell out of it as the script logic really confused me.\r\n\r\n:::tip Heads up!\r\n\r\n- It takes a few minutes for this change to show in the GUI.\r\n- If the permission already exists the prompt will error on the final command.\r\n  \r\n:::\r\n\r\n```powershell showLineNumbers\r\n\r\n# Your tenant id.\r\n$TenantID=\"Add your tenant ID\"\r\n# Microsoft Graph App ID (DON'T CHANGE).\r\n$GraphAppId = \"00000003-0000-0000-c000-000000000000\"\r\n# Name of the manage identity (same as the Logic App name).\r\n$DisplayNameOfMSI=\"Add display name of Enterprise App\" \r\n# Check the Microsoft Graph documentation for the permission you need for the operation.\r\n$PermissionName = \"Add your permission here\" \r\n\r\n# Install the module (You need admin on the machine)\r\nInstall-Module AzureAD \r\n\r\n# Connect to Azure AD via tenant ID, you'll need an admin account to login with though.\r\nConnect-AzureAD -TenantId $TenantID\r\n# Collects the Target System Managed Identities information into the MSI variable.\r\n$MSI = (Get-AzureADServicePrincipal -Filter \"displayName eq '$DisplayNameOfMSI'\")\r\nStart-Sleep -Seconds 10\r\n# Store the Microsoft Graph API informaiton into the GraphServicePrincipal variable.\r\n$GraphServicePrincipal = Get-AzureADServicePrincipal -Filter \"appId eq '$GraphAppId'\"\r\n# Searches Microsoft Graph API for the value matching the PermissionName variable populated above and stores this in the AppRole Variable.\r\n$AppRole = $GraphServicePrincipal.AppRoles |  Where-Object {$_.Value -eq $PermissionName -and $_.AllowedMemberTypes -contains \"Application\"}\r\n# Assigned the permission from the Microsoft Graph API to the target Managed Identity.\r\nNew-AzureADServiceAppRoleAssignment -ObjectId $MSI.ObjectId -ResourceId $GraphServicePrincipal.ObjectId -Id $appRole.Id -PrincipalId $MSI.ObjectId\r\n```\r\n\r\n## Setup Automation Runbook\r\n\r\nThe Runbook is the container if you like for your script and anything that relates to the \"task\" of running it.\r\n\r\n:::tip Runtime Version\r\n\r\nBe extra careful of this, it cannot be changed after the fact and will limit the modules that will work with it to the runtime version you select (If that makes sense!).\r\n  \r\n:::\r\n\r\n1. Sign in to the Azure portal.\r\n2. **Search for** and Select **Automation Accounts**.\r\n3. On the Automation Accounts page, **Select your Automation account** from the list.\r\n4. From the Automation account, **Select Runbooks** under Process Automation to open the list of runbooks.\r\n5. **Click Create** a runbook and fill in the information below.\r\n6. Click Create to create the runbook.\r\n\r\n## Install any Modules\r\n\r\nHere we need to install any PowerShell modules we want to use with our Scripts; make sure they match the runtime of your Runbooks.\r\n\r\n1. Sign in to the Azure portal.\r\n2. **Search for** and Select **Automation Accounts**.\r\n3. On the Automation Accounts page, **Select your Automation account** from the list.\r\n4. From the Automation account, **Select Modules** under Shared Resources.\r\n5. In here you can see a list of currently installed modules and you can add more by Clicking on the +Add a module button.\r\n\r\n:::tip\r\n\r\nYou may find that you have to search around a bit for the module that you do actually want and when you do find the module you want, search for the command that you want to use, sometimes the module name is right but, the command is missing!\r\n\r\n:::\r\n\r\n## Test Script\r\n\r\n### Create the Script\r\n\r\n1. Navigate to your runbook.\r\n2. **Click Edit** at the top.\r\n3. Here you can **enter your script**.\r\n\r\nUseful options on the left hand side to note:\r\n\r\n- **CMDLETS**, which you can use to find commands from the installed modules.\r\n- **ASSETS**, which will show you the various resources available to your runbooks which are saved within your automation account resource.\r\n\r\n### Test Script\r\n\r\nOnce your done and ready to test.\r\n\r\n1. **Click on Test pane** at the top.\r\n2. **Click Start** in the top left to being running the scrpt.\r\n\r\nI found it really hard to get my head around how this works for some reason. So expect that this may take quite a few tries to get right.\r\n\r\n:::caution Storage Account Keys\r\n\r\nBefore you can use the script as a base, you'll need to store the storage account key as a variable in your Automation account.\r\n\r\n1. Open your **Automation Account**.\r\n2. Click on **Variables** under Shared Resources.\r\n3. Click **Add a variable**.\r\n4. Create a new **string variable**.\r\n\r\nSee the script for how to reference these in your runbooks.\r\n\r\n:::\r\n\r\n```powershell showLineNumbers\r\n# Ensures you do not inherit an AzContext in your runbook\r\nDisable-AzContextAutosave -Scope Process | Out-Null\r\n\r\n#Storage Account Information \r\n$StorageACCKey = Get-AutomationVariable -Name 'stgacckey01' \r\n$ContainerName = \"Enter the blob container name\"\r\n\r\n# Connect using a Managed Service Identity\r\ntry {\r\n    Connect-AzAccount -Identity\r\n}\r\ncatch{\r\n    Write-Output \"Unable to login. Aborting.\"; \r\n    exit\r\n}\r\n\r\n$Users = Get-AzADUser | Select-Object DisplayName, Id, Mail, UserPrincipalName\r\n\r\nWrite-Output $Users\r\n\r\n# Exports the data in the $Users variable into a local environmental variable that will store the information whilst running in the Automation account. \r\n$Users | Export-Csv \"$Env:temp\\Users.csv\" -notypeinformation\r\n\r\n# Creates a new context to enable connection to the storage account. \r\n$Context = New-AzureStorageContext -StorageAccountName \"whautomationfiledump\" -StorageAccountKey $StorageACCKey\r\n\r\n# This copes the csv file in the $Env:temp/MFAState.csv variable and copies it to the blob. \r\nSet-AzureStorageBlobContent -Context $Context -Container $ContainerName -File \"$Env:temp\\Users.csv\" -Blob \"Users.csv\" -force\r\n```\r\n\r\n:::tip In my experience\r\nThe test window is not like a command promtp and will not output the commands running or anything at all apart from really confusing errors. Try to build error catching into your script, use the `try, catch` commands to write the errors to the promtp for debugging. More in this in the testing section at the bottom.\r\n:::\r\n\r\n## Setup the Schedule\r\n\r\nThis has been mostly regurgitated from [this Microsoft link here.](https://learn.microsoft.com/en-us/azure/automation/shared-resources/schedules#create-a-new-schedule-in-the-azure-portal)\r\n\r\n1. From your Automation account, on the left-hand pane **Select Schedules** under Shared Resources.\r\n2. Select **Add a schedule**.\r\n3. Select whether the schedule runs once or on a reoccurring schedule by Selecting Once or Recurring.\r\n   1. If you Select Once, **specify a start time** and then **Select Create**.\r\n   2. If you Select Recurring, **specify a start time**. For Recur every, **Select how often** you want the runbook to repeat. Select by hour, day, week, or month.\r\n4. **Press Create** to complete.\r\n\r\n:::tip\r\n\r\nYou must publish the runbook before you can assign the schedule to it.\r\n\r\n:::\r\n\r\n5. Head back to your Runbook.\r\n6. Select **Link to schedule **at the top.\r\n7. Click the option to **Link a schedule to your runbook**,  **Select the schedule** you created from the list.\r\n8. **Click OK** to complete.\r\n\r\n## Testing\r\n\r\n### Testing the script\r\n\r\n#### Error handling\r\n\r\nThe test pane window for the most part will not output useful errors or show you how the script is running. I'd suggest building error handling and status updates into your script if you wish during debugging, it will help immensely.\r\n\r\nAn example of the `try, catch` command sytax is below.\r\n\r\n```powershell showLineNumbers\r\n# Connect using a Managed Service Identity\r\ntry {\r\n    Connect-AzAccount -Identity\r\n}\r\ncatch{\r\n    Write-Output \"Unable to login. Aborting.\"; \r\n    exit\r\n}\r\n```\r\nI'd also suggest using `write-output` all over the place to confirm progress and variables etc.\r\n\r\n:::info Shout out\r\nShout out to the VS code module for Automation Accounts, it'll let you pull down the runbook contents and edit in VsCode and upload it again. Highly recommend using this.\r\n:::\r\n\r\n### Confirm the data export\r\n\r\n1. Navigate to your **storage account**.\r\n2. Click on the **File shares or Containers option**, wherever you saved your data to.\r\n3. Click into the share\\container, **find your file** and Click on the **3 dots** to the right of it.\r\n4. **Click View\\edit**, it should display a basic output of the file.\r\n\r\n## Further notes\r\n\r\n- Run As accounts are being deprecated, this method is by far the easiest to use when trying to pull info from AzureAD and Office 365."
        },
        {
          "id": "Setup-Azure-Lighthouse",
          "metadata": {
            "permalink": "/blog/Setup-Azure-Lighthouse",
            "source": "@site/blog/2023-10-21-Setup-Lighthouse/Setup-AzureLighthouse.md",
            "title": "Azure ligthhouse Setup",
            "description": "The lesssons I have learned setting up Azure Ligthouse.",
            "date": "2023-10-21T13:00:00.000Z",
            "formattedDate": "October 21, 2023",
            "tags": [
              {
                "label": "Azure",
                "permalink": "/blog/tags/azure"
              },
              {
                "label": "Lighthouse",
                "permalink": "/blog/tags/lighthouse"
              }
            ],
            "readingTime": 4.836666666666667,
            "hasTruncateMarker": true,
            "authors": [
              {
                "name": "Will",
                "title": "Creator of the IT KB.",
                "url": "https://github.com/BassJamm?tab=repositories"
              }
            ],
            "frontMatter": {
              "draft": false,
              "title": "Azure ligthhouse Setup",
              "description": "The lesssons I have learned setting up Azure Ligthouse.",
              "slug": "Setup-Azure-Lighthouse",
              "date": "2023-10-21T13:00",
              "toc_max_heading_level": 5,
              "authors": [
                {
                  "name": "Will",
                  "title": "Creator of the IT KB.",
                  "url": "https://github.com/BassJamm?tab=repositories"
                }
              ],
              "tags": [
                "Azure",
                "Lighthouse"
              ],
              "image": "https://i.imgur.com/mErPwqL.png",
              "hide_table_of_contents": false
            },
            "prevItem": {
              "title": "Automate Scripts in Azure",
              "permalink": "/blog/Automate-scripts-in-Azure"
            },
            "nextItem": {
              "title": "Challenge 2 - Folder Size Report with PowerShell",
              "permalink": "/blog/pwsh-challenge-002"
            }
          },
          "content": "In this post, are the lessons learned when I first setup Azure Lighthouse as well as things I have picked up over the course of my year of using/supporting it within the company I work for.\r\n\r\n<!--truncate-->\r\n\r\nAzure Lighthouse serves as a central command hub for businesses and service providers in the Azure cloud. It simplifies the management of various Azure accounts, making it a breeze to oversee resources and services while boosting security and efficiency. Think of it as your go-to control center for all things Azure.\r\n\r\n## Online Reading\r\n\r\nBelow are some links that are good reading before you dig into setting up the application.\r\n\r\n- [Microsoft doc - What is Azure Lighthouse?](https://learn.microsoft.com/en-us/azure/lighthouse/overview).\r\n- [Microsoft doc - Onboard a customer to Azure Lighthouse](https://learn.microsoft.com/en-us/azure/lighthouse/how-to/onboard-customer).\r\n\r\n## Setup Guidance\r\n\r\nYou've got some key areas to think about here before you get started, Azure AD and your Azure Lighthouse offering/delegation. Before you get cracking think about the following:\r\n\r\n> These are all explained further down!\r\n\r\nAzure Active Directory:\r\n\r\n- Are you going to create seperate groups per department.\r\n- What is your naming convention going to be.\r\n\r\nAzure Lighthouse offering/delegation:\r\n\r\n- Offering Naming Convention (Client will see this).\r\n- Offering Description (Client will see this).\r\n- Authorisations.\r\n- Delegation Scopes (Subscription level or Resource Group Leve.)\r\n\r\n:::caution My Opinions\r\nI'd highly recommend reviewing the links mentioned in the Online Reading section for up to date information. The information following this point are from my notes.\r\n:::\r\n\r\n### Azure AD\r\n\r\nTo set things up, start by creating some groups within Azure AD. These groups will include the satff members who need access to the customer/client through Azure lighthouse. You have the flexibility to make these groups as detailed and numerous as needed.\r\n\r\nI recommend considering two key roles, these roles can be fine-tuned to meet your specific requirements:\r\n\r\n- *Azure Lighthouse Contributor*\r\n- *Azure Lighthouse Reader*\r\n\r\n:::tip Role Assignment to staff business roles.\r\nInitially, I attempted to set up separate groups for each department, such as Operations, Service Desk, and Finance. While this approach worked well for the technical teams, it didn't meet my expectations when it came to granting access to billing information for the Finance team. After extensive testing, I discovered that using direct or named accounts, or leveraging the Microsoft Partner Center, provided a more effective solution.\r\n:::\r\n\r\n### Azure Lighthouse Offering\r\n\r\n#### ARM Template\r\n\r\nBelow is an outline and suggestion for each relevant configurable options for the ARM template.\r\n\r\n:::info On-boarding multiple Subscriptions or Resource Groups for one client\\customer.\r\nYou have the option to delegate multiple resource groups and subscriptions all at once from the Service Providers dashboard within the customer's tenant. While the documentation might imply otherwise, it is indeed possible and functional.\r\n:::\r\n\r\n##### Offering Name\r\n\r\nWhen naming your offering, remember that it will be visible in your customer's tenant, so it's important that it looks good. I recommend using a format like this:\r\n\r\n- `Managing Company Name` Lighthouse Offering for `Customer Name` - `Subscription or Resource Group Name`.\r\n\r\nBe sure to replace the placeholders with the relevant details based on your naming convention.\r\n\r\n##### Description(s)\r\n\r\nThe description is customer-facing, so it should be clear and informative. Here's a suggested format:\r\n\r\n- `Managing Company Name` managed services offer for overseeing supported resources.\r\n- `Managing Company Name` offer for managing and overseeing project resources for `project or PO number`.\r\n\r\n##### Delegation Scope(s)\r\n\r\nYou have two options: `Subscription` and `Resource Group`. These choices are quite self-explanatory. However, it's important to note that you cannot change these after deployment, so be sure to select the one that suits your specific needs.\r\n\r\n##### Authorisations\r\n\r\nAuthorisations represent the roles you intend to assign to your pre-configured Azure AD groups. You have the flexibility to define these roles as either broad or specific, although I recommend a broader approach to minimize the need for creating or updating new delegations in the future.\r\n\r\n:::caution Broader Authorisations\r\nWhile this approach may sound appealing in theory, it's crucial to think about security. It may not be advisable if you are responsible for managing a small portion or a specific resource within your customer's environment. Additionally, consider the nature of your customer in this context.\r\n:::\r\n\r\n- **Principal type**: Group\r\n- **Name**: Choose one of the mentioned groups in the section above.\r\n- **Display Name**: Please do not edit. (This is the friendly name displayed in the customer's tenant, and it will default to the group name.)\r\n- **Role**: Assign the roles as indicated for the groups listed above.\r\n- **Access Type**: Permanent.\r\n\r\n### ARM template Example\r\n\r\nYou can skip the initial lines until you locate `mspOfferName`. In the vicinity of this, you'll find the description field. To make changes, modify the `defaultValue:` data, not the `description:` information.\r\n\r\n:::tip Confirming your scope\r\nLocate the line `\"$schema\": \"https://schema.management.azure.com/schemas/2019-08-01/subscriptionDeploymentTemplate.json#\",` and modify it to reflect either a subscription or resource deployment template, depending on your initial selection.\r\n:::\r\n\r\n\r\nSimilar situation with the `mspOfferDescription:` as well.\r\n\r\n```json showLineNumbers\r\n\"mspOfferName\": {\r\n   \"type\": \"string\",\r\n   \"metadata\": {\r\n    \"description\": \"Specify a unique name for your offer\"\r\n   },\r\n   \"defaultValue\": \"My Company Lighthouse Contributor Offer for Customer Name - Subscription Name \"\r\n  },\r\n\r\n  \"mspOfferDescription\": {\r\n   \"type\": \"string\",\r\n   \"metadata\": {\r\n    \"description\": \"Name of the Managed Service Provider offering\"\r\n   },\r\n   \"defaultValue\": \"My Company managed services offer to administer support resources.\"\r\n  }\r\n```\r\n\r\n\r\nLocate the `variables:` section to define your group and the Azure role assignments.\r\n\r\n- `managedByTenantId\"` - is your tenant or partner tenant ID.\r\n- `\"authorizations\":` - Are you Azure Roles assignments.\r\n- `\"principalId\"` - Is your object in the managing tenant.\r\n- `\"roleDefinitionId\"` - Is the Azure AD role you've assigned. In the case below, it's `Contributor` and the `Managed Services Registration assignment Delete` roles.\r\n- `\"principalIdDisplayName\"` - Is your friendly Group name, this will show in your customer tenant, it does not need to match the group name in the managing tenant.\r\n\r\nYou'll see some of the information repeated for each role you assign to the same object in the managing tenant.\r\n\r\n```json showLineNumbers\r\n\"variables\": {\r\n  \"mspRegistrationName\": \"[guid(parameters('mspOfferName'))]\",\r\n  \"mspAssignmentName\": \"[guid(parameters('mspOfferName'))]\",\r\n  \"managedByTenantId\": \"Your tenant ID\",\r\n  \"authorizations\": [\r\n   {\r\n    \"principalId\": \"Your object in the managing tenant\",\r\n    \"roleDefinitionId\": \"Id-number-here\",\r\n    \"principalIdDisplayName\": \"Lighthouse Contributor\"\r\n   },\r\n   {\r\n    \"principalId\": \"Your object in the managing tenant\",\r\n    \"roleDefinitionId\": \"Id-number-here\",\r\n    \"principalIdDisplayName\": \"Lighthouse Contributor\"\r\n   }\r\n  ]\r\n },\r\n ```\r\n\r\n:::tip You can edit the JSON template directly!\r\nYou don't need to always duck back into Azure Lighthouse to create the templates, you can just edit the JSON files if you're comfortable doing so.\r\n:::\r\n\r\n## Using Lighthouse\r\n\r\nAfter setting up and assigning your Lighthouse delegations to your staff, there's no specific action required to access Azure Lighthouse. It's consistently available. Below, we provide two methods to verify the status of your delegations.\r\n\r\n### Via the Lighthouse blade\r\n\r\n1. Open the **Azure Management Portal**.\r\n2. Search for **Azure Lighthouse**.\r\n3. Click on the **Delegations** option on the left-hand side, you may need to click manage my customers if you’ve no connections.\r\n4. You will then see your list of your customer’s subscriptions that you have access to.\r\n\r\n### Via the subscriptions blade\r\n\r\n> You'll need to show the customer in the subscription filter first though.\r\n\r\n1. Open the **Azure Management Portal**.\r\n2. Navigate to the **Subscriptions blade**.\r\n3. The list of subscriptions will also list the customer subscriptions you have access too.\r\n4. In the **Azure portal**, Select the **Directory + subscriptions** or **Settings icon** in the top right of the page.\r\n5. In the Directories + subscriptions settings page, ensure that the **Advanced filters toggle is turned off**.\r\n6. In the Default subscription filter section, **select the appropriate directory** and subscription.\r\n\r\n:::info\r\nIf you have been granted access to one or more resource groups, rather than to an entire subscription, select the subscription to which that resource group belongs. You'll then work in the context of that subscription, but will only be able to access the designated resource group(s).\r\n:::\r\n\r\n## Partner Earned Credit (PEC) using PAL\r\n\r\nPAL (Partner Admin Link) is how a partner can be recognized by Microsoft for their work in Azure on-behalf-of their customer.\r\n\r\n- [Microsoft doc - Associate your partner ID when you onboard new customers vai Lighthouse](https://learn.microsoft.com/en-us/azure/lighthouse/how-to/partner-earned-credit#associate-your-partner-id-when-you-onboard-new-customers).\r\n- [Microsoft doc - Link a PartnerID with PAL or DPOR for PAL](https://learn.microsoft.com/en-us/partner-center/link-partner-id-for-azure-performance-pal-dpor#link-to-a-partnerid-with-pal)\r\n\r\nTo do this via Lighthouse, in a nutshell.\r\n\r\n1. [**Create a service principal**](https://learn.microsoft.com/en-us/azure/active-directory/develop/howto-authenticate-service-principal-powershell) user account in your managing tenant.\r\n2. Using that service principal account, [**link to your Associated Partner ID**](https://learn.microsoft.com/en-us/azure/cost-management-billing/manage/link-partner-id#link-to-a-partner-id) in your managing tenant.\r\n3. Include at least one authorization which includes the service principal Account as a user with an Azure built-in role that is eligible for PEC.\r\n\r\n:::caution\r\nThis role must be granted as a permanent assignment, not as a just-in-time eligible authorization, in order for PEC to apply.\r\n:::"
        },
        {
          "id": "pwsh-challenge-002",
          "metadata": {
            "permalink": "/blog/pwsh-challenge-002",
            "source": "@site/blog/2023-08-02-pwsh-challenge002/PWSH-Challenge-002.md",
            "title": "Challenge 2 - Folder Size Report with PowerShell",
            "description": "Create a script that can download any file by the URL given by a user.",
            "date": "2023-08-07T11:00:00.000Z",
            "formattedDate": "August 7, 2023",
            "tags": [
              {
                "label": "PowerShell",
                "permalink": "/blog/tags/power-shell"
              },
              {
                "label": "Script",
                "permalink": "/blog/tags/script"
              },
              {
                "label": "Challenge",
                "permalink": "/blog/tags/challenge"
              }
            ],
            "readingTime": 3.3766666666666665,
            "hasTruncateMarker": true,
            "authors": [
              {
                "name": "Will",
                "title": "Creator of the IT KB.",
                "url": "https://github.com/BassJamm?tab=repositories"
              }
            ],
            "frontMatter": {
              "draft": false,
              "title": "Challenge 2 - Folder Size Report with PowerShell",
              "description": "Create a script that can download any file by the URL given by a user.",
              "slug": "pwsh-challenge-002",
              "date": "2023-08-07T11:00",
              "authors": [
                {
                  "name": "Will",
                  "title": "Creator of the IT KB.",
                  "url": "https://github.com/BassJamm?tab=repositories"
                }
              ],
              "tags": [
                "PowerShell",
                "Script",
                "Challenge"
              ],
              "image": "https://cdn.hashnode.com/res/hashnode/image/upload/v1690624765820/c7da8f32-0c1e-4ca0-a807-bb4efe449c18.png?w=1600&h=840&fit=crop&crop=entropy&auto=compress,format&format=webp",
              "hide_table_of_contents": false
            },
            "prevItem": {
              "title": "Azure ligthhouse Setup",
              "permalink": "/blog/Setup-Azure-Lighthouse"
            },
            "nextItem": {
              "title": "Challenge 1 - File Download Script with PowerShell",
              "permalink": "/blog/pwsh-challenge-001"
            }
          },
          "content": "Create a script that calculates the total size of a given folder and all its subfolders (recursively). The script should display the size in a human-readable format (e.g., KB, MB, GB).\r\n\r\n<!--truncate-->\r\n:::info Quick Social Plug\r\n\r\nCheck out my other post locations: -\r\n\r\n- [HashNode Link](https://willh.hashnode.dev/)\r\n- [Patreon Link](https://patreon.com/BassJamm?utm_medium=clipboard_copy&utm_source=copyLink&utm_campaign=creatorshare_creator&utm_content=join_link)\r\n\r\n:::\r\n\r\n## End Result\r\n\r\nThought I would put the result first, and save people from scrolling, those who wish to see the process can read the rest of this!\r\n\r\nI decided not to add any error handling into this, as it's quite hard to break this one!\r\n\r\n:::note\r\n\r\nSorry for the backticks, it makes it a bit easier to read on the page as it's quite slim!\r\n\r\n:::\r\n\r\n[Link to script in GitHub!](https://github.com/BassJamm/PowerShellChallenge/blob/51799e1b087f846285f15bff9df9f019caa12fdc/Folder-Report/TOOL-Folder-Report.ps1)\r\n\r\n```powershell showLineNumbers\r\n###### Prompt user for flder input. ######\r\n$sourceDirectory = Read-Host -Prompt \"Please enter the directory you wish to scan\"\r\n\r\n###### Get all Directories in that location. ######\r\nWrite-Host \"Collecting the diretory information.\" -ForegroundColor Yellow\r\n$ChildDirectories = (Get-ChildItem $sourceDirectory -Directory).FullName\r\nStart-Sleep 1\r\nWrite-Host \"Directories found successfully.\" -ForegroundColor Green\r\n\r\n###### Foreach directory get all items recursively. ######\r\nWrite-Host \"Processing items.\" -ForegroundColor Yellow\r\n$childDirectorySizes = foreach ($folder in $ChildDirectories) {\r\n    [PSCustomObject]@{\r\n        \"Location\"  = $folder\r\n        \"FileItems\" = (Get-ChildItem $folder -Recurse -Force | Where-Object { $_.PSIsContainer -eq $false } | Measure-Object | Select-Object Count).Count\r\n        \"Size(MB)\"  = [Math]::Round((Get-ChildItem $folder -Recurse -Force | Where-Object { $_.PSIsContainer -eq $false } | Measure-Object -Property Length -Sum | Select-Object Sum).Sum / 1MB, 3)\r\n    }\r\n\r\n}\r\nWrite-Host \"All subdirectories processed successfully.\" -ForegroundColor Green\r\n\r\n###### Provide a size report of the directory and child directories. ######\r\n$childDirectorySizes | Format-Table * -AutoSize\r\n\r\n```\r\n\r\n## Building the script\r\n\r\nI would like to start by saying I am not an expert at this but, these challenges prompt learning and thus I aim to be better for the next challenge and so on.\r\n\r\n### Prompting for user input\r\n\r\nFirstly, we need to get the folder location from the end user. I've done this using the Read-Host command with the `-prompt` parameter. This is a staple command I have found in almost every script requiring user input.\r\n\r\n```powershell showLineNumbers\r\n$sourceDirectory = Read-Host -Prompt \"Please enter the directory you wish to scan\"\r\n```\r\n\r\nThe `Read-Host -prompt` input is then stored in the `$sourceDirectory`` variable for later use.\r\n\r\n### Getting the Folders\r\n\r\nSecondly, we need to identify the folders that are within the directory the user gave us. We are doing this with the `Get-ChildItem` command, which gets everything in that location, Folders, or Files.\r\n\r\nI'm then piping this `|` into a `Where-Object` command which then identifies the Folders or containers.\r\n\r\n:::info\r\nI've added a sort by \"name\" at the end, as I want to display the first 10 items in the console, to indicate that the script has found items to the end user. It is completely unnecessary!\r\n:::\r\n\r\n```powershell showlineNumbers\r\n###### Prompt user for flder input. ######\r\n$sourceDirectory = Read-Host -Prompt \"Please enter the directory you wish to scan\"\r\n```\r\n\r\nWe then get all of hte directories in the folder location promtped for using the lin above.\r\n\r\n```powershell showLineNumbers\r\n###### Get all Directories in that location. ######\r\n$ChildDirectories = (Get-ChildItem $sourceDirectory -Directory).FullName\r\nStart-Sleep 1 # Add this for slightly better pacing when using the script.\r\n\r\n```\r\n\r\n### Getting the Folder Sizes\r\n\r\nThirdly, we need to get the folder sizes and convert them into a nicer format to read, quite a bit to unpack on this one, so please bear with my explanation; you may also want to blow this image up, it's a little small, sorry!\r\n\r\n```powershell showLineNumbers\r\n###### Foreach directory get all items recursively. ######\r\nWrite-Host \"Processing items.\" -ForegroundColor Yellow\r\n$childDirectorySizes = foreach ($folder in $ChildDirectories) {\r\n    [PSCustomObject]@{\r\n        \"Location\"  = $folder\r\n        \"FileItems\" = (Get-ChildItem $folder -Recurse -Force | Where-Object { $_.PSIsContainer -eq $false } | Measure-Object | Select-Object Count).Count\r\n        \"Size(MB)\"  = [Math]::Round((Get-ChildItem $folder -Recurse -Force | Where-Object { $_.PSIsContainer -eq $false } | Measure-Object -Property Length -Sum | Select-Object Sum).Sum / 1MB, 3)\r\n    }\r\n}\r\n```\r\n\r\nI've created a new variable called, `$childDirectorySizes` in this variable, we are going to store the output of the foreach loop.\r\n\r\nThe foreach the argument takes each folder entry found within the `$ChildDirectories` & then loops through the script inside the squiggly brackets.\r\n\r\n```powershell showLineNumbers\r\nforeach ($folder in $ChildDirectories)\r\n```\r\n\r\nThe foreach loop does the following: -\r\n\r\n1. Grabs the full file paths for each file recursively using `Get-ChildItem $folder.FullName -recurse -force`.\r\n2. Then it searches for any objects that are not a Folder using `Where-Object {$_.PSIsContainer -eq $false}`.\r\n3. It then measures the object using `Measure-Object -property Length -sum`.\r\n4. We then select only the one property that we want, `Select-Object Sum`.\r\n5. It then stores results inside the variable `$subFolderItems`.\r\n6. We then create a new PowerShell object using the command, `[PSCustomObject]`, as this is going to be a new Hash table, we add the `@{}` after it, all properties go inside the squiggly brackets.\r\n7. We then create 2 new properties, `Location` and `Size(MB)`. For each of these properties, we need to tell it where the information comes from and how to format it.\r\n\r\nFor `Location`, we are going to use the Items Full name, which is equal to its full UNC path. `$folder.FullName`.\r\n\r\nFor `Size(MB)`, we are going to use the Output of steps 1 to 5. The output from this should be the SUM of all the files under the folder item that's stored in the variable `$folder` which is in the foreach loop argument.\r\n\r\nWe also want to round this to MBs with 2 Decimal places; we can do this with the command, `[Math]::Round($subFolderItems.sum /1MB, 2)`.\r\n\r\n### Creating a console Ouput\r\n\r\nFor this point, I have taken the variable that is holding the output from the Foreach loop noted above and piped this into a Format-Table command with the order of the properties to show.\r\n\r\n```powershell showLineNumbers\r\n###### Provide a size report of the directory and child directories. ######\r\n$childDirectorySizes | Format-Table * -AutoSize\r\n```\r\n\r\nWhich gives you this.\r\n\r\n```powershell showLineNumbers\r\nLocation                           FileItems Size(MB)\r\n--------                           --------- --------\r\nC:\\GitRepos\\100-days-of-javascript       287   59.772\r\nC:\\GitRepos\\PowerShellChallenge          106    0.072\r\nC:\\GitRepos\\Private-Code-Dump            253   14.089\r\nC:\\GitRepos\\python-app                    97    0.067\r\nC:\\GitRepos\\The-IT-Knowledge-base      36396  414.871\r\n```"
        },
        {
          "id": "pwsh-challenge-001",
          "metadata": {
            "permalink": "/blog/pwsh-challenge-001",
            "source": "@site/blog/2023-08-05-pwsh-challenge001/PWSH-challenge-001.md",
            "title": "Challenge 1 - File Download Script with PowerShell",
            "description": "Create a script that can download any file by the URL given by a user.",
            "date": "2023-08-05T11:00:00.000Z",
            "formattedDate": "August 5, 2023",
            "tags": [
              {
                "label": "PowerShell",
                "permalink": "/blog/tags/power-shell"
              },
              {
                "label": "Script",
                "permalink": "/blog/tags/script"
              },
              {
                "label": "Challenge",
                "permalink": "/blog/tags/challenge"
              }
            ],
            "readingTime": 3.4366666666666665,
            "hasTruncateMarker": true,
            "authors": [
              {
                "name": "Will",
                "title": "Creator of the IT KB.",
                "url": "https://github.com/BassJamm?tab=repositories"
              }
            ],
            "frontMatter": {
              "title": "Challenge 1 - File Download Script with PowerShell",
              "description": "Create a script that can download any file by the URL given by a user.",
              "slug": "pwsh-challenge-001",
              "date": "2023-08-05T11:00",
              "authors": [
                {
                  "name": "Will",
                  "title": "Creator of the IT KB.",
                  "url": "https://github.com/BassJamm?tab=repositories"
                }
              ],
              "tags": [
                "PowerShell",
                "Script",
                "Challenge"
              ],
              "image": "https://i.imgur.com/mErPwqL.png",
              "hide_table_of_contents": false
            },
            "prevItem": {
              "title": "Challenge 2 - Folder Size Report with PowerShell",
              "permalink": "/blog/pwsh-challenge-002"
            },
            "nextItem": {
              "title": "Microsoft Defender for Endpoint Woes",
              "permalink": "/blog/Defender-for-Endpoint-Woes"
            }
          },
          "content": "Create a script that can download any file by the URL given by a user. Add in the ability to download multiple items at once.\r\n\r\n<!--truncate-->\r\n:::info Quick Social Plug\r\n\r\nCheck out my other post locations: -\r\n\r\n- [HashNode Link](https://willh.hashnode.dev/)\r\n- [Patreon Link](https://patreon.com/BassJamm?utm_medium=clipboard_copy&utm_source=copyLink&utm_campaign=creatorshare_creator&utm_content=join_link)\r\n\r\n:::\r\n\r\n## Creating the script\r\n\r\n### Basic functionality\r\n\r\nFirstly, we'll create the logic outline, by that I mean, create the bare bones of the script without any error handling or console output.\r\n\r\n:::note\r\n\r\nI've seen parameter blocks written in multiple ways, I write them this way as I think they're more easily understood by those who are not familiar with them.\r\n\r\n:::\r\n\r\n```powershell showLineNumbers\r\n<# Parameter List #>\r\n[CmdletBinding()]\r\nparam (\r\n    [Parameter(Mandatory=$true)]\r\n    [string] $Source,\r\n    [Parameter(Mandatory=$true)]\r\n    [string] $Destination\r\n)\r\n<# Bare bones of the command to download an item. #>\r\nStart-BitsTransfer -Source $Source -Destination $Destination -TransferType Download\r\n```\r\n\r\nRunning the above script file by type `.\\TOOL-File-download.ps1 -Source \"`[`https://go.microsoft.com/fwlink/p/?LinkID=2195167&clcid=0x409&culture=en-us&country=US`](https://go.microsoft.com/fwlink/p/?LinkID=2195167&clcid=0x409&culture=en-us&country=US)`\" -Destination C:\\Temp\\Server2019.iso` does the job; the output is below.\r\n\r\nNow to add the ability to see running jobs and historic jobs.\r\n\r\n## Adding running and historic job reports\r\n\r\nAs you can see below, this is becoming a bit longer but, I would not say it is getting any more complex.\r\n\r\n```powershell showLineNumbers\r\n\r\n<# Parameter List #>\r\n[CmdletBinding()]\r\nparam (\r\n    [Parameter()]\r\n    [switch] $JobReport,\r\n    [Parameter()]\r\n    [switch] $JobHistory\r\n)\r\n###### Add the ability to review in-progress download job(s). ######\r\nif ($JobReport) {\r\n    <# Action to perform if the condition is true #>\r\n    Write-Host \"Getting running downloads.\"\r\n    Get-BitsTransfer | Where-Object JobState -EQ 'transferring' | Format-Table JobId, CreationTime,DisplayName,TransferType,JobState,BytesTransferred,BytesTotal -AutoSize\r\n}\r\n###### Add the ability to review historic job(s). ######\r\nif ($JobHistory) {\r\n    <# Action to perform if the condition is true #>\r\n    Write-Host \"Getting historic downloads.\"\r\n    Get-BitsTransfer | Sort-Object CreationTime -Descending | Format-Table JobId, CreationTime,DisplayName,TransferType,JobState,BytesTransferred,BytesTotal -AutoSize\r\n}\r\n```\r\n\r\nNow to add a way to cancel running jobs.\r\n\r\n## Canceling jobs\r\n\r\nBelow I have added the code to cancel a running job, although a bit basic and rough it does work.\r\n\r\n```powershell showLineNumbers\r\n\r\n<# Parameter List #>\r\n[CmdletBinding()]\r\nparam (\r\n    [Parameter()]\r\n    [String] $CancelJob\r\n)\r\n\r\n###### Add the ability to cancel job(s). ######\r\nif ($CancelJob) {\r\n    <# Action to perform if the condition is true #>\r\n    Get-BitsTransfer -Name $CancelJob | Remove-BitsTransfer\r\n    Get-BitsTransfer | Where-Object JobState -EQ 'transferring' | Format-Table JobId, CreationTime,DisplayName,TransferType,JobState,BytesTransferred,BytesTotal -AutoSize\r\n    \r\n}\r\n```\r\n\r\n## Adding in some error handling and console output\r\n\r\nBelow I have added in some 'fluff', some try\\\\catch blocks and some write-host functionality to make using this a bit easier.\r\n\r\nTry\\\\Catch blocks are a godsend when it comes to error handling, essentially it means try what is in the try area and catch anything that comes out of it.\r\n\r\n### Downloading the file section\r\n\r\n```powershell showLineNumbers\r\n###### Download a file. ######\r\nif ($Source) {\r\n    <# Action to perform if the condition is true #>\r\n    try {\r\n        Start-BitsTransfer -Source $Source -Destination $Destination -TransferType Download -Asynchronous -DisplayName $JobName\r\n        Write-Host \"Beginning download from $($Source).\"\r\n        Write-Host \"\" # This just adds some more space in the console.\r\n        \r\n    }\r\n    catch {\r\n        <#Do this if a terminating exception happens#>\r\n        Write-Host \"Error when starting the job.\"\r\n        $_\r\n    }\r\n}\r\n```\r\n\r\n### Canceling the download section\r\n\r\n```powershell showLineNumbers\r\n\r\n###### Add the ability to cancel job(s). ######\r\nif ($CancelJob) {\r\n    <# Action to perform if the condition is true #>\r\n    try {\r\n        Get-BitsTransfer -Name $CancelJob | Remove-BitsTransfer\r\n        Write-Host \"Job cancelled successfully.\" -ForegroundColor Green\r\n        Write-Host \"\" # This just adds some more space in the console.\r\n        Start-sleep 2\r\n        Write-Host \"Remaining jobs listed below.\" -ForegroundColor Yellow\r\n        Write-Host \"\" # This just adds some more space in the console.\r\n        Start-sleep 1\r\n        Get-BitsTransfer | Where-Object JobState -EQ 'transferring' | Format-Table JobId, CreationTime,DisplayName,TransferType,JobState,BytesTransferred,BytesTotal -AutoSize    \r\n    }\r\n    catch {\r\n        <#Do this if a terminating exception happens#>\r\n        Write-Host \"Error when cancelling job.\"\r\n        $_\r\n    }\r\n}\r\n```\r\n\r\n## Full Script\r\n\r\n```powershell\r\n\r\n<# Parameter List #>\r\n[CmdletBinding()]\r\nparam (\r\n    [Parameter()]\r\n    [string] $Source,\r\n    [Parameter()]\r\n    [string] $Destination,\r\n    [Parameter()]\r\n    [string] $JobName,\r\n    [Parameter()]\r\n    [switch] $RunningJobs,\r\n    [Parameter()]\r\n    [switch] $JobHistory,\r\n    [Parameter()]\r\n    [String] $CancelJob\r\n)\r\n###### Download a file. ######\r\nif ($Source) {\r\n    <# Action to perform if the condition is true #>\r\n    try {\r\n        Start-BitsTransfer -Source $Source -Destination $Destination -TransferType Download -Asynchronous -DisplayName $JobName\r\n        Write-Host \"Beginning download from $($Source).\"\r\n        Write-Host \"\" # This just adds some more space in the console.\r\n        \r\n    }\r\n    catch {\r\n        <#Do this if a terminating exception happens#>\r\n        Write-Host \"Error when starting the job.\"\r\n        $_\r\n    }\r\n}\r\n\r\n###### Add the ability to review in-progress download job(s). ######\r\nif ($RunningJobs) {\r\n    <# Action to perform if the condition is true #>\r\n    Write-Host \"Getting running downloads.\"\r\n    Write-Host \"\" # This just adds some more space in the console.\r\n    Get-BitsTransfer | Where-Object JobState -EQ 'transferring' | Format-Table JobId, CreationTime,DisplayName,TransferType,JobState,BytesTransferred,BytesTotal -AutoSize\r\n}\r\n\r\n###### Add the ability to review historic job(s). ######\r\nif ($JobHistory) {\r\n    <# Action to perform if the condition is true #>\r\n    Write-Host \"Getting historic downloads.\"\r\n    Get-BitsTransfer | Sort-Object CreationTime -Descending | Format-Table JobId, CreationTime,DisplayName,TransferType,JobState,BytesTransferred,BytesTotal -AutoSize\r\n}\r\n\r\n###### Add the ability to cancel job(s). ######\r\nif ($CancelJob) {\r\n    <# Action to perform if the condition is true #>\r\n\r\n    try {\r\n        Get-BitsTransfer -Name $CancelJob | Remove-BitsTransfer\r\n        Write-Host \"Job cancelled successfully.\" -ForegroundColor Green\r\n        Write-Host \"\" # This just adds some more space in the console.\r\n        Start-sleep 2\r\n        Write-Host \"Remaining jobs listed below.\" -ForegroundColor Yellow\r\n        Write-Host \"\" # This just adds some more space in the console.\r\n        Start-sleep 1\r\n        Get-BitsTransfer | Where-Object JobState -EQ 'transferring' | Format-Table JobId, CreationTime,DisplayName,TransferType,JobState,BytesTransferred,BytesTotal -AutoSize\r\n        \r\n    }\r\n    catch {\r\n        <#Do this if a terminating exception happens#>\r\n        Write-Host \"Error when cancelling job.\"\r\n        $_\r\n    }\r\n\r\n}\r\n```\r\n\r\n## Bonus: Multiple downloads\r\n\r\nThe `Start-BitsTransfer` command supports pipeline input, so you can add multiple download links using a text file.\r\n\r\nCreate a text file in the format below, this is a typical csv format.\r\n\r\n![](<https://cdn.hashnode.com/res/hashnode/image/upload/v1690560380176/0d5d0ab7-5b77-4010-9ed7-e30d780a510a.png> align=\"center\")\r\n\r\nAdditional Code was added to the script.\r\n\r\n```powershell\r\n\r\n<# Parameter List #>\r\n[CmdletBinding()]\r\nparam (\r\n    [Parameter()]\r\n    [string] $MultiJobDownload\r\n)\r\n###### Download multiple files. ######\r\nif ($MultiJobDownload) {\r\n    <# Action to perform if the condition is true #>\r\n    try {\r\n        Import-csv -Path $MultiJobDownload | Start-BitsTransfer -Asynchronous\r\n        Write-Host \"Beginning download from listed sources.\"\r\n        Write-Host \"\" # This just adds some more space in the console.\r\n        Start-Sleep 1\r\n        Write-Host \" Sources and destinations below: -\"\r\n        Get-Content -Path $MultiJobDownload\r\n        \r\n    }\r\n    catch {\r\n        <#Do this if a terminating exception happens#>\r\n        Write-Host \"Error when starting the job.\"\r\n        $_\r\n    }\r\n}\r\n```"
        },
        {
          "id": "Defender-for-Endpoint-Woes",
          "metadata": {
            "permalink": "/blog/Defender-for-Endpoint-Woes",
            "source": "@site/blog/2023-09-12-Defender-Woes/Microsoft-Defender-for-Endpoint-Woes.md",
            "title": "Microsoft Defender for Endpoint Woes",
            "description": "Windows services hating each other on Server 2012 R2.",
            "date": "2023-08-05T11:00:00.000Z",
            "formattedDate": "August 5, 2023",
            "tags": [
              {
                "label": "Defender",
                "permalink": "/blog/tags/defender"
              },
              {
                "label": "Azure",
                "permalink": "/blog/tags/azure"
              }
            ],
            "readingTime": 1.3333333333333333,
            "hasTruncateMarker": true,
            "authors": [
              {
                "name": "Will",
                "title": "Creator of the IT KB.",
                "url": "https://github.com/BassJamm?tab=repositories"
              }
            ],
            "frontMatter": {
              "title": "Microsoft Defender for Endpoint Woes",
              "description": "Windows services hating each other on Server 2012 R2.",
              "slug": "Defender-for-Endpoint-Woes",
              "date": "2023-08-05T11:00",
              "authors": [
                {
                  "name": "Will",
                  "title": "Creator of the IT KB.",
                  "url": "https://github.com/BassJamm?tab=repositories"
                }
              ],
              "tags": [
                "Defender",
                "Azure"
              ],
              "image": "https://i.imgur.com/mErPwqL.png",
              "hide_table_of_contents": false
            },
            "prevItem": {
              "title": "Challenge 1 - File Download Script with PowerShell",
              "permalink": "/blog/pwsh-challenge-001"
            },
            "nextItem": {
              "title": "Welcome!",
              "permalink": "/blog/welcome"
            }
          },
          "content": "For the last 3 months our monitoring team at my workplace has been spammed with alerts about the Windows Defender Advanced Threat Protection Service has entered the \"stopped\" state for one 2012 R2 server.\r\n\r\nQuickly followed about 6 minutes later with another alert saying, the service is okay.\r\n<!--truncate-->\r\n:::info Quick Social Plug\r\n\r\nCheck out my other post locations: -\r\n\r\n- [HashNode Link](https://willh.hashnode.dev/)\r\n\r\n:::\r\n\r\n## The Investigation\r\n\r\nFrom checking the alert, I could see the service was stopping and starting but, no real reason as to why it was doing this. This is when I turned to PowerShell (*still unsure of why I did this over trusty Event Viewer, just seems to be my default now*).\r\n\r\nQuickly smashed out the below command to see what I could find.\r\n\r\nThis promptly spat out these errors.\r\n\r\nAfter googling this (as any techy would), there are a lot of mentions of this error message all over the place with suggestions to do the following:-\r\n\r\n1. Disable or uninstall any other AV products on the device.\r\n\r\n2. Run a Full system scan for viruses.\r\n\r\n3. Run a System File Checker scan from the command line, `sfc /scannow`.\r\n\r\n4. Re-install the Defender for Endpoint on that device.\r\n\r\n5. Update the OS to a new version (*A bit extreme mind you however, new OS versions have much better support for Defender, you don't need this service on Server 2016 and above, so it's still valid!*)\r\n\r\n## What Solved It\r\n\r\nThe short answer is, I'm not 100% certain.\r\n\r\nOur first port of call was to remove the *System Center Endpoint Protection* application, which we probably should have done before installing the *Defender for Endpoint* application to be honest.\r\n\r\nSecondly, we off-boarded the appliance from Defedner and then on-boarded it again by doing the following: -\r\n\r\n- Download the off-boarding script from your Defender portal.\r\n\r\n  - In the navigation pane, select Settings &gt; Endpoints &gt; Device management &gt; Offboarding.\r\n\r\n- Off-Board the Server using the script provided by Microsoft below.\r\n\r\n  - `C:\\Packages\\Plugins\\Microsoft.Azure.AzureDefenderForServers.MDE.Windows\\versionNo\\Install.ps1.`\r\n\r\n  - The command is, `Install.ps1 -OffboardingScript .\\WindowsDefenderATPOffboardingScript_valid_until_*.cmd`\r\n\r\n- Reboot the server.\r\n\r\n- Check the Defender application is gone from Programs and Features and that the Services are gone. If not, manually uninstall using Programs and Features.\r\n\r\n- On-Board the server again using the script provided by Microsoft. Command below.\r\n\r\n  - `C:\\Packages\\Plugins\\Microsoft.Azure.AzureDefenderForServers.MDE.Windows\\versionNo\\Install.ps1.`\r\n\r\n  - The command is, `.\\Install.ps1 -OnboardingScript .\\WindowsDefenderATPOnboardingScript_valid_until_*.cmd`\r\n\r\n- Reboot the server.\r\n\r\nHopefully this helps somone!"
        },
        {
          "id": "welcome",
          "metadata": {
            "permalink": "/blog/welcome",
            "source": "@site/blog/2023-05-20-welcome/index.md",
            "title": "Welcome!",
            "description": "First blog post.",
            "date": "2023-05-20T10:00:00.000Z",
            "formattedDate": "May 20, 2023",
            "tags": [
              {
                "label": "hello",
                "permalink": "/blog/tags/hello"
              },
              {
                "label": "docusaurus-v2",
                "permalink": "/blog/tags/docusaurus-v-2"
              }
            ],
            "readingTime": 0.09,
            "hasTruncateMarker": true,
            "authors": [
              {
                "name": "Will",
                "title": "Creator of the IT KB.",
                "url": "https://github.com/BassJamm?tab=repositories"
              }
            ],
            "frontMatter": {
              "title": "Welcome!",
              "description": "First blog post.",
              "slug": "welcome",
              "date": "2023-05-20T10:00",
              "authors": [
                {
                  "name": "Will",
                  "title": "Creator of the IT KB.",
                  "url": "https://github.com/BassJamm?tab=repositories"
                }
              ],
              "tags": [
                "hello",
                "docusaurus-v2"
              ],
              "image": "https://i.imgur.com/mErPwqL.png",
              "hide_table_of_contents": false
            },
            "prevItem": {
              "title": "Microsoft Defender for Endpoint Woes",
              "permalink": "/blog/Defender-for-Endpoint-Woes"
            }
          },
          "content": "Welcome to the blog.\n\nThis blog is created with [**Docusaurus 2**](https://docusaurus.io/).\n\n<!--truncate-->\n:::info Quick Social Plug\n\nCheck out my other post locations: -\n\n- [HashNode Link](https://willh.hashnode.dev/)\n\n:::"
        }
      ],
      "blogListPaginated": [
        {
          "items": [
            "Automate-scripts-in-Azure",
            "Setup-Azure-Lighthouse",
            "pwsh-challenge-002",
            "pwsh-challenge-001",
            "Defender-for-Endpoint-Woes",
            "welcome"
          ],
          "metadata": {
            "permalink": "/blog/",
            "page": 1,
            "postsPerPage": 6,
            "totalPages": 1,
            "totalCount": 6,
            "blogDescription": "Blog",
            "blogTitle": "Blog"
          }
        }
      ],
      "blogTags": {
        "/blog/tags/azure": {
          "label": "Azure",
          "items": [
            "Automate-scripts-in-Azure",
            "Setup-Azure-Lighthouse",
            "Defender-for-Endpoint-Woes"
          ],
          "permalink": "/blog/tags/azure",
          "pages": [
            {
              "items": [
                "Automate-scripts-in-Azure",
                "Setup-Azure-Lighthouse",
                "Defender-for-Endpoint-Woes"
              ],
              "metadata": {
                "permalink": "/blog/tags/azure",
                "page": 1,
                "postsPerPage": 3,
                "totalPages": 1,
                "totalCount": 3,
                "blogDescription": "Blog",
                "blogTitle": "Blog"
              }
            }
          ]
        },
        "/blog/tags/automation": {
          "label": "Automation",
          "items": [
            "Automate-scripts-in-Azure"
          ],
          "permalink": "/blog/tags/automation",
          "pages": [
            {
              "items": [
                "Automate-scripts-in-Azure"
              ],
              "metadata": {
                "permalink": "/blog/tags/automation",
                "page": 1,
                "postsPerPage": 1,
                "totalPages": 1,
                "totalCount": 1,
                "blogDescription": "Blog",
                "blogTitle": "Blog"
              }
            }
          ]
        },
        "/blog/tags/scripting": {
          "label": "Scripting",
          "items": [
            "Automate-scripts-in-Azure"
          ],
          "permalink": "/blog/tags/scripting",
          "pages": [
            {
              "items": [
                "Automate-scripts-in-Azure"
              ],
              "metadata": {
                "permalink": "/blog/tags/scripting",
                "page": 1,
                "postsPerPage": 1,
                "totalPages": 1,
                "totalCount": 1,
                "blogDescription": "Blog",
                "blogTitle": "Blog"
              }
            }
          ]
        },
        "/blog/tags/lighthouse": {
          "label": "Lighthouse",
          "items": [
            "Setup-Azure-Lighthouse"
          ],
          "permalink": "/blog/tags/lighthouse",
          "pages": [
            {
              "items": [
                "Setup-Azure-Lighthouse"
              ],
              "metadata": {
                "permalink": "/blog/tags/lighthouse",
                "page": 1,
                "postsPerPage": 1,
                "totalPages": 1,
                "totalCount": 1,
                "blogDescription": "Blog",
                "blogTitle": "Blog"
              }
            }
          ]
        },
        "/blog/tags/power-shell": {
          "label": "PowerShell",
          "items": [
            "pwsh-challenge-002",
            "pwsh-challenge-001"
          ],
          "permalink": "/blog/tags/power-shell",
          "pages": [
            {
              "items": [
                "pwsh-challenge-002",
                "pwsh-challenge-001"
              ],
              "metadata": {
                "permalink": "/blog/tags/power-shell",
                "page": 1,
                "postsPerPage": 2,
                "totalPages": 1,
                "totalCount": 2,
                "blogDescription": "Blog",
                "blogTitle": "Blog"
              }
            }
          ]
        },
        "/blog/tags/script": {
          "label": "Script",
          "items": [
            "pwsh-challenge-002",
            "pwsh-challenge-001"
          ],
          "permalink": "/blog/tags/script",
          "pages": [
            {
              "items": [
                "pwsh-challenge-002",
                "pwsh-challenge-001"
              ],
              "metadata": {
                "permalink": "/blog/tags/script",
                "page": 1,
                "postsPerPage": 2,
                "totalPages": 1,
                "totalCount": 2,
                "blogDescription": "Blog",
                "blogTitle": "Blog"
              }
            }
          ]
        },
        "/blog/tags/challenge": {
          "label": "Challenge",
          "items": [
            "pwsh-challenge-002",
            "pwsh-challenge-001"
          ],
          "permalink": "/blog/tags/challenge",
          "pages": [
            {
              "items": [
                "pwsh-challenge-002",
                "pwsh-challenge-001"
              ],
              "metadata": {
                "permalink": "/blog/tags/challenge",
                "page": 1,
                "postsPerPage": 2,
                "totalPages": 1,
                "totalCount": 2,
                "blogDescription": "Blog",
                "blogTitle": "Blog"
              }
            }
          ]
        },
        "/blog/tags/defender": {
          "label": "Defender",
          "items": [
            "Defender-for-Endpoint-Woes"
          ],
          "permalink": "/blog/tags/defender",
          "pages": [
            {
              "items": [
                "Defender-for-Endpoint-Woes"
              ],
              "metadata": {
                "permalink": "/blog/tags/defender",
                "page": 1,
                "postsPerPage": 1,
                "totalPages": 1,
                "totalCount": 1,
                "blogDescription": "Blog",
                "blogTitle": "Blog"
              }
            }
          ]
        },
        "/blog/tags/hello": {
          "label": "hello",
          "items": [
            "welcome"
          ],
          "permalink": "/blog/tags/hello",
          "pages": [
            {
              "items": [
                "welcome"
              ],
              "metadata": {
                "permalink": "/blog/tags/hello",
                "page": 1,
                "postsPerPage": 1,
                "totalPages": 1,
                "totalCount": 1,
                "blogDescription": "Blog",
                "blogTitle": "Blog"
              }
            }
          ]
        },
        "/blog/tags/docusaurus-v-2": {
          "label": "docusaurus-v2",
          "items": [
            "welcome"
          ],
          "permalink": "/blog/tags/docusaurus-v-2",
          "pages": [
            {
              "items": [
                "welcome"
              ],
              "metadata": {
                "permalink": "/blog/tags/docusaurus-v-2",
                "page": 1,
                "postsPerPage": 1,
                "totalPages": 1,
                "totalCount": 1,
                "blogDescription": "Blog",
                "blogTitle": "Blog"
              }
            }
          ]
        }
      },
      "blogTagsListPath": "/blog/tags"
    }
  },
  "docusaurus-plugin-content-pages": {
    "default": [
      {
        "type": "jsx",
        "permalink": "/",
        "source": "@site/src/pages/index.js"
      },
      {
        "type": "mdx",
        "permalink": "/markdown-page",
        "source": "@site/src/pages/markdown-page.md",
        "title": "Markdown page example",
        "description": "I'm an IT professional, currently working as an Infrastructure Engineer. This website is a portfolio of my work and what I've learned over time. Please check out my GitHub and GitBooks repositories linked at the top.",
        "frontMatter": {
          "title": "Markdown page example"
        }
      }
    ]
  },
  "docusaurus-plugin-debug": {},
  "docusaurus-plugin-google-gtag": {},
  "docusaurus-theme-classic": {},
  "docusaurus-lunr-search": {},
  "docusaurus-bootstrap-plugin": {},
  "docusaurus-mdx-fallback-plugin": {}
}